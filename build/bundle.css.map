{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "Datepicker.svelte",
    "Month.svelte",
    "NavBar.svelte",
    "Popover.svelte",
    "Week.svelte",
    "SvelteTable.svelte",
    "BriefHomepage.svelte",
    "chart-bar-vertical.svelte",
    "chart-covid-variants.svelte",
    "GraphicFooter.svelte",
    "GraphicTitle.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Month from './Month.svelte';\n  import NavBar from './NavBar.svelte';\n  import Popover from './Popover.svelte';\n  import { getMonths } from './lib/helpers';\n  import { formatDate, internationalize } from 'timeUtils';\n  import { keyCodes, keyCodesArray } from './lib/keyCodes';\n  import { onMount, createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n  const today = new Date();\n  const oneYear = 1000 * 60 * 60 * 24 * 365;\n\n  let popover;\n\n  export let format = '#{m}/#{d}/#{Y}';\n  export let start = new Date(Date.now() - oneYear);\n  export let end = new Date(Date.now() + oneYear);\n  export let selected = today;\n  export let dateChosen = false;\n  export let trigger = null;\n  export let selectableCallback = null;\n  export let weekStart = 0;\n  export let daysOfWeek = [\n    ['Sunday', 'Sun'],\n    ['Monday', 'Mon'],\n    ['Tuesday', 'Tue'],\n    ['Wednesday', 'Wed'],\n    ['Thursday', 'Thu'],\n    ['Friday', 'Fri'],\n    ['Saturday', 'Sat']\n  ];\n  export let monthsOfYear = [\n    ['January', 'Jan'],\n    ['February', 'Feb'],\n    ['March', 'Mar'],\n    ['April', 'Apr'],\n    ['May', 'May'],\n    ['June', 'Jun'],\n    ['July', 'Jul'],\n    ['August', 'Aug'],\n    ['September', 'Sep'],\n    ['October', 'Oct'],\n    ['November', 'Nov'],\n    ['December', 'Dec']\n  ];\n\n  selected = (\n    selected.getTime() < start.getTime()\n    || selected.getTime() > end.getTime()\n  ) ? start : selected;\n\n  export let style = '';\n\n  // theming variables:\n  export let buttonBackgroundColor = '#fff';\n  export let buttonBorderColor = '#eee';\n  export let buttonTextColor = '#333';\n  export let highlightColor = '#f7901e';\n  export let dayBackgroundColor = 'none';\n  export let dayTextColor = '#4a4a4a';\n  export let dayHighlightedBackgroundColor = '#efefef';\n  export let dayHighlightedTextColor = '#4a4a4a';\n\n  internationalize({ daysOfWeek, monthsOfYear });\n  let sortedDaysOfWeek = weekStart === 0 ? daysOfWeek : (() => {\n    let dow = daysOfWeek.slice();\n    dow.push(dow.shift());\n    return dow;\n  })();\n\n  let highlighted = today;\n  let shouldShakeDate = false;\n  let shakeHighlightTimeout;\n  let month = today.getMonth();\n  let year = today.getFullYear();\n\n  let isOpen = false;\n  let isClosing = false;\n\n  today.setHours(0, 0, 0, 0);\n\n  function assignmentHandler(formatted) {\n    if (!trigger) return;\n    trigger.innerHTML = formatted;\n  }\n\n  $: months = getMonths(start, end, selectableCallback, weekStart);\n\n  let monthIndex = 0;\n  $: {\n    monthIndex = 0;\n    for (let i = 0; i < months.length; i += 1) {\n      if (months[i].month === month && months[i].year === year) {\n        monthIndex = i;\n      }\n    }\n  }\n  $: visibleMonth = months[monthIndex];\n\n  $: visibleMonthId = year + month / 100;\n  $: lastVisibleDate = visibleMonth.weeks[visibleMonth.weeks.length - 1].days[6].date;\n  $: firstVisibleDate = visibleMonth.weeks[0].days[0].date;\n  $: canIncrementMonth = monthIndex < months.length - 1;\n  $: canDecrementMonth = monthIndex > 0;\n  $: wrapperStyle = `\n    --button-background-color: ${buttonBackgroundColor};\n    --button-border-color: ${buttonBorderColor};\n    --button-text-color: ${buttonTextColor};\n    --highlight-color: ${highlightColor};\n    --day-background-color: ${dayBackgroundColor};\n    --day-text-color: ${dayTextColor};\n    --day-highlighted-background-color: ${dayHighlightedBackgroundColor};\n    --day-highlighted-text-color: ${dayHighlightedTextColor};\n    ${style}\n  `;\n\n  export let formattedSelected;\n  $: {\n    formattedSelected = typeof format === 'function'\n      ? format(selected)\n      : formatDate(selected, format);\n  }\n\n  onMount(() => {\n    month = selected.getMonth();\n    year = selected.getFullYear();\n  });\n\n  function changeMonth(selectedMonth) {\n    month = selectedMonth;\n    highlighted = new Date(year, month, 1);\n  }\n\n  function incrementMonth(direction, day = 1) {\n    if (direction === 1 && !canIncrementMonth) return;\n    if (direction === -1 && !canDecrementMonth) return;\n    let current = new Date(year, month, 1);\n    current.setMonth(current.getMonth() + direction);\n    month = current.getMonth();\n    year = current.getFullYear();\n    highlighted = new Date(year, month, day);\n  }\n\n  function getDefaultHighlighted() {\n    return new Date(selected);\n  }\n\n  const getDay = (m, d, y) => {\n    let theMonth = months.find(aMonth => aMonth.month === m && aMonth.year === y);\n    if (!theMonth) return null;\n    // eslint-disable-next-line\n    for (let i = 0; i < theMonth.weeks.length; ++i) {\n      // eslint-disable-next-line\n      for (let j = 0; j < theMonth.weeks[i].days.length; ++j) {\n        let aDay = theMonth.weeks[i].days[j];\n        if (aDay.month === m && aDay.day === d && aDay.year === y) return aDay;\n      }\n    }\n    return null;\n  };\n\n  function incrementDayHighlighted(amount) {\n    let proposedDate = new Date(highlighted);\n    proposedDate.setDate(highlighted.getDate() + amount);\n    let correspondingDayObj = getDay(\n      proposedDate.getMonth(),\n      proposedDate.getDate(),\n      proposedDate.getFullYear()\n    );\n    if (!correspondingDayObj || !correspondingDayObj.isInRange) return;\n    highlighted = proposedDate;\n    if (amount > 0 && highlighted > lastVisibleDate) {\n      incrementMonth(1, highlighted.getDate());\n    }\n    if (amount < 0 && highlighted < firstVisibleDate) {\n      incrementMonth(-1, highlighted.getDate());\n    }\n  }\n\n  function checkIfVisibleDateIsSelectable(date) {\n    const proposedDay = getDay(date.getMonth(), date.getDate(), date.getFullYear());\n    return proposedDay && proposedDay.selectable;\n  }\n\n  function shakeDate(date) {\n    clearTimeout(shakeHighlightTimeout);\n    shouldShakeDate = date;\n    shakeHighlightTimeout = setTimeout(() => {\n      shouldShakeDate = false;\n    }, 700);\n  }\n\n  function assignValueToTrigger(formatted) {\n    assignmentHandler(formatted);\n  }\n\n  function registerSelection(chosen) {\n    if (!checkIfVisibleDateIsSelectable(chosen)) return shakeDate(chosen);\n    // eslint-disable-next-line\n    close();\n    selected = chosen;\n    dateChosen = true;\n    assignValueToTrigger(formattedSelected);\n    return dispatch('dateSelected', { date: chosen });\n  }\n\n  function handleKeyPress(evt) {\n    if (keyCodesArray.indexOf(evt.keyCode) === -1) return;\n    evt.preventDefault();\n    switch (evt.keyCode) {\n      case keyCodes.left:\n        incrementDayHighlighted(-1);\n        break;\n      case keyCodes.up:\n        incrementDayHighlighted(-7);\n        break;\n      case keyCodes.right:\n        incrementDayHighlighted(1);\n        break;\n      case keyCodes.down:\n        incrementDayHighlighted(7);\n        break;\n      case keyCodes.pgup:\n        incrementMonth(-1);\n        break;\n      case keyCodes.pgdown:\n        incrementMonth(1);\n        break;\n      case keyCodes.escape:\n        // eslint-disable-next-line\n        close();\n        break;\n      case keyCodes.enter:\n        registerSelection(highlighted);\n        break;\n      default:\n        break;\n    }\n  }\n\n  function registerClose() {\n    document.removeEventListener('keydown', handleKeyPress);\n    dispatch('close');\n  }\n\n  function close() {\n    popover.close();\n    registerClose();\n  }\n\n  function registerOpen() {\n    highlighted = getDefaultHighlighted();\n    month = selected.getMonth();\n    year = selected.getFullYear();\n    document.addEventListener('keydown', handleKeyPress);\n    dispatch('open');\n  }\n</script>\n\n<div\n  class=\"datepicker\"\n  class:open=\"{isOpen}\"\n  class:closing=\"{isClosing}\"\n  style={wrapperStyle}\n>\n  <Popover\n    bind:this=\"{popover}\"\n    bind:open=\"{isOpen}\"\n    bind:shrink=\"{isClosing}\"\n    {trigger}\n    on:opened=\"{registerOpen}\"\n    on:closed=\"{registerClose}\"\n  >\n    <div slot=\"trigger\">\n      <slot {selected} {formattedSelected}>\n        {#if !trigger}\n        <button class=\"calendar-button\" type=\"button\">\n          {formattedSelected}\n        </button>\n        {/if}\n      </slot>\n    </div>\n    <div slot=\"contents\">\n      <div class=\"calendar\">\n        <NavBar\n          {month}\n          {year}\n          {canIncrementMonth}\n          {canDecrementMonth}\n          {start}\n          {end}\n          {monthsOfYear}\n          on:monthSelected={e => changeMonth(e.detail)}\n          on:incrementMonth={e => incrementMonth(e.detail)}\n        />\n        <div class=\"legend\">\n          {#each sortedDaysOfWeek as day}\n          <span>{day[1]}</span>\n          {/each}\n        </div>\n        <Month\n          {visibleMonth}\n          {selected}\n          {highlighted}\n          {shouldShakeDate}\n          id={visibleMonthId}\n          on:dateSelected={e => registerSelection(e.detail)}\n        />\n      </div>\n    </div>\n  </Popover>\n</div>\n\n<style>\n  .datepicker {\n    display: inline-block;\n    margin: 0 auto;\n    text-align: center;\n    overflow: visible;\n  }\n\n  .calendar-button {\n    padding: 10px 20px;\n    border: 1px solid var(--button-border-color);\n    display: block;\n    text-align: center;\n    width: 300px;\n    text-decoration: none;\n    cursor: pointer;\n    background: var(--button-background-color);\n    color: var(--button-text-color);\n    border-radius: 7px;\n    box-shadow: 0px 0px 3px rgba(0, 0, 0, 0.1);\n  }\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n\n  .calendar {\n    box-sizing: border-box;\n    position: relative;\n    overflow: hidden;\n    user-select: none;\n    width: 100vw;\n    padding: 10px;\n    padding-top: 0;\n  }\n\n  @media (min-width: 480px) {\n    .calendar {\n      height: auto;\n      width: 340px;\n      max-width: 100%;\n    }\n  }\n\n  .legend {\n    color: #4a4a4a;\n    padding: 10px 0;\n    margin-bottom: 5px;\n  }\n\n  .legend span {\n    width: 14.285714%;\n    display: inline-block;\n    text-align: center;\n  }\n</style>\n",
    "<script>\n  import Week from './Week.svelte';\n\n  export let id;\n  export let visibleMonth;\n  export let selected;\n  export let highlighted;\n  export let shouldShakeDate;\n\n  let lastId = id;\n  let direction;\n\n  $: {\n    direction = lastId < id ? 1 : -1;\n    lastId = id;\n  }\n</script>\n\n<div class=\"month-container\">\n  {#each visibleMonth.weeks as week (week.id) }\n    <Week \n      days={week.days} \n      {selected} \n      {highlighted} \n      {shouldShakeDate} \n      {direction}\n      on:dateSelected \n    />\n  {/each}\n</div>\n\n<style>\n  .month-container { \n    width: 100%;\n    display: -ms-grid;\n    display: grid;\n    -ms-grid-columns: 1fr;\n    -ms-grid-rows: 1fr;\n  }\n</style>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let month;\n  export let year;\n  export let start;\n  export let end;\n  export let canIncrementMonth;\n  export let canDecrementMonth;\n  export let monthsOfYear;\n\n  let monthSelectorOpen = false;\n  let availableMonths;\n\n  $: {\n    let isOnLowerBoundary = start.getFullYear() === year;\n    let isOnUpperBoundary = end.getFullYear() === year;\n    availableMonths = monthsOfYear.map((m, i) => {\n      return Object.assign({}, {\n        name: m[0],\n        abbrev: m[1]\n      }, {\n        selectable:\n          (!isOnLowerBoundary && !isOnUpperBoundary)\n          || (\n            (!isOnLowerBoundary || i >= start.getMonth())\n            && (!isOnUpperBoundary || i <= end.getMonth())\n          )\n      });\n    });\n  }\n\n  function toggleMonthSelectorOpen() {\n    monthSelectorOpen = !monthSelectorOpen;\n  }\n\n  function monthSelected(event, { m, i }) {\n    event.stopPropagation();\n    if (!m.selectable) return;\n    dispatch('monthSelected', i);\n    toggleMonthSelectorOpen();\n  }\n</script>\n\n<div class=\"title\">\n  <div class=\"heading-section\">\n    <div class=\"control\" \n      class:enabled={canDecrementMonth}\n      on:click={() => dispatch('incrementMonth', -1)}>\n      <i class=\"arrow left\"></i>\n    </div>\n    <div class=\"label\" on:click={toggleMonthSelectorOpen}>\n      {monthsOfYear[month][0]} {year}\n    </div> \n    <div class=\"control\"\n      class:enabled={canIncrementMonth}\n      on:click={() => dispatch('incrementMonth', 1)}>\n      <i class=\"arrow right\"></i>\n    </div>\n  </div>\n  <div class=\"month-selector\" class:open={monthSelectorOpen}>\n    {#each availableMonths as monthDefinition, index}\n      <div \n        class=\"month-selector--month\" \n        class:selected={index === month}\n        class:selectable={monthDefinition.selectable}\n        on:click={e => monthSelected(e, { m: monthDefinition, i: index })}\n      >\n        <span>{monthDefinition.abbrev}</span>\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .heading-section { \n    font-size: 20px;\n    padding: 24px 15px;\n    display: flex;\n    justify-content: space-between;\n    color: #3d4548;\n    font-weight: bold;\n  }\n  .label { \n    cursor: pointer;\n  }\n  .month-selector { \n    position: absolute;\n    top: 75px; \n    left: 0; \n    right: 0; \n    bottom: 0; \n    background-color: #fff;\n    transition: all 300ms; \n    transform: scale(1.2); \n    opacity: 0; \n    visibility: hidden;\n    z-index: 1;\n    text-align: center;\n  }\n  .month-selector.open { \n    transform: scale(1); \n    visibility: visible;\n    opacity: 1;\n  }\n  .month-selector--month { \n    width: 31.333%; \n    margin: .5%; \n    height: 23%;\n    display: inline-block;\n    color: #4a4a4a;\n    border: 1px solid #efefef;\n    opacity: 0.2;\n  }\n  .month-selector--month.selectable { \n    opacity: 1; \n  }\n  .month-selector--month.selectable:hover { \n    cursor: pointer;\n    box-shadow: 0px 0px 3px rgba(0,0,0,0.15);\n  }\n  .month-selector--month.selected { \n    background: var(--highlight-color);\n    color: #fff;\n  }\n  .month-selector--month:before { \n    content: ' ';\n    display: inline-block;\n    height: 100%;\n    vertical-align: middle;\n  }\n  .month-selector--month span { \n    vertical-align: middle; \n    display: inline-block;\n  }\n\n  .control { \n    padding: 0 8px;\n    opacity: 0.2;\n    transform: translateY(3px);\n  }\n\n  .control.enabled { \n    opacity: 1; \n    cursor: pointer;\n  }\n\n  .arrow {\n    display: inline-block;\n    width: 18px;\n    height: 18px;\n    border-style: solid;\n    border-color: #a9a9a9;\n    border-width: 0;\n    border-bottom-width: 2px;\n    border-right-width: 2px;\n  }\n\n  .arrow.right {\n    transform: rotate(-45deg);\n    -webkit-transform: rotate(-45deg);\n  }\n\n  .arrow.left {\n    transform: rotate(135deg);\n    -webkit-transform: rotate(135deg);\n  }\n\n</style>\n",
    "<script>\n  import { onMount, createEventDispatcher, tick } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  let once = (el, evt, cb) => {\n    function handler() {\n      cb.apply(this, arguments);\n      el.removeEventListener(evt, handler);\n    }\n    el.addEventListener(evt, handler);\n  };\n\n  let popover;\n  let w;\n  let triggerContainer;\n  let contentsAnimated;\n  let contentsWrapper;\n  let translateY = 0;\n  let translateX = 0;\n\n  export let open = false;\n  export let shrink;\n  export let trigger;\n  export const close = () => {\n    shrink = true;\n    once(contentsAnimated, 'animationend', () => {\n      shrink = false;\n      open = false;\n      dispatch('closed');\n    });\n  };\n\n  function checkForFocusLoss(evt) {\n    if (!open) return;\n    let el = evt.target;\n    // eslint-disable-next-line\n    do {\n      if (el === popover) return;\n    // eslint-disable-next-line\n    } while (el = el.parentNode);\n    close();\n  }\n\n  onMount(() => {\n    document.addEventListener('click', checkForFocusLoss);\n    if (!trigger) return;\n    triggerContainer.appendChild(trigger.parentNode.removeChild(trigger));\n\n    // eslint-disable-next-line\n    return () => {\n      document.removeEventListener('click', checkForFocusLoss);\n    };\n  });\n\n  const getDistanceToEdges = async () => {\n    if (!open) { open = true; }\n    await tick();\n    let rect = contentsWrapper.getBoundingClientRect();\n    return {\n      top: rect.top + (-1 * translateY),\n      bottom: window.innerHeight - rect.bottom + translateY,\n      left: rect.left + (-1 * translateX),\n      right: document.body.clientWidth - rect.right + translateX\n    };\n  };\n\n  const getTranslate = async () => {\n    let dist = await getDistanceToEdges();\n    let x; let\n      y;\n    if (w < 480) {\n      y = dist.bottom;\n    } else if (dist.top < 0) {\n      y = Math.abs(dist.top);\n    } else if (dist.bottom < 0) {\n      y = dist.bottom;\n    } else {\n      y = 0;\n    }\n    if (dist.left < 0) {\n      x = Math.abs(dist.left);\n    } else if (dist.right < 0) {\n      x = dist.right;\n    } else {\n      x = 0;\n    }\n    return { x, y };\n  };\n\n  const doOpen = async () => {\n    const { x, y } = await getTranslate();\n\n    translateX = x;\n    translateY = y;\n    open = true;\n\n    dispatch('opened');\n  };\n</script>\n\n<svelte:window bind:innerWidth={w} />\n<div class=\"sc-popover\" bind:this={popover}>\n  <div class=\"trigger\" on:click={doOpen} bind:this={triggerContainer}>\n    <slot name=\"trigger\">\n    </slot>\n  </div>\n  <div \n    class=\"contents-wrapper\" \n    class:visible={open}\n    class:shrink={shrink}\n    style=\"transform: translate(-50%,-50%) translate({translateX}px, {translateY}px)\" \n    bind:this={contentsWrapper}>\n    <div class=\"contents\" bind:this={contentsAnimated}>\n      <div class=\"contents-inner\">\n        <slot name=\"contents\"></slot>\n      </div>\n    </div>\n  </div>\n</div>\n\n<style>\n  .sc-popover { \n    position: relative;\n  }\n\n  .contents-wrapper { \n    transform: translate(-50%, -50%); \n    position: absolute;\n    top: 50%; \n    left: 50%; \n    transition: none;\n    z-index: 2;\n    display: none;\n  }\n\n  .contents { \n    background: #fff;\n    box-shadow: 0px 10px 26px rgba(0,0,0,0.4) ;\n    opacity: .8; \n    padding-top: 0;\n    display: none;\n    animation: grow 200ms forwards cubic-bezier(.92,.09,.18,1.05);\n  }\n\n  .contents-inner { \n    animation: fadeIn 400ms forwards;\n  }\n\n  .contents-wrapper.visible { \n    display: block;\n  }\n\n  .contents-wrapper.visible .contents { \n    opacity: 1; \n    transform: scale(1);\n    display: block;\n  }\n\n  .contents-wrapper.shrink .contents { \n    animation: shrink 150ms forwards cubic-bezier(.92,.09,.18,1.05);\n  }\n\n  @keyframes grow { \n    0% { \n      transform: scale(.9,.1); \n      opacity: 0; \n    }\n    30% { \n      opacity: 1; \n    }\n    100% { \n      transform: scale(1);\n    }\n  }\n\n  @keyframes shrink { \n    0% { \n      transform: scale(1); \n      opacity: 1; \n    }\n    70% { \n      opacity: 1; \n    }\n    100% { \n      opacity: 0; \n      transform: scale(.9,.1);\n    }\n  }\n\n  @keyframes fadeIn { \n    0% { \n      opacity: 0; \n    }\n    50% { \n      opacity: 0;\n    }\n    100% { \n      opacity: 1; \n    }\n  }\n</style>\n",
    "<script>\n  import { areDatesEquivalent } from './lib/helpers';\n  import { fly, fade } from 'svelte/transition';\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let days;\n  export let selected;\n  export let highlighted;\n  export let shouldShakeDate;\n  export let direction;\n</script>\n\n<div \n  class=\"week\" \n  in:fly|local={{ x: direction * 50, duration: 180, delay: 90 }}\n  out:fade|local={{ duration: 180 }}\n>\n  {#each days as day}\n    <div \n      class=\"day\" \n      class:outside-month={!day.partOfMonth}\n      class:is-today={day.isToday}\n      class:is-disabled={!day.selectable}\n    >\n      <button \n        class=\"day--label\" \n        class:selected={areDatesEquivalent(day.date, selected)}\n        class:highlighted={areDatesEquivalent(day.date, highlighted)}\n        class:shake-date={shouldShakeDate && areDatesEquivalent(day.date, shouldShakeDate)}\n        class:disabled={!day.selectable}\n        type=\"button\"\n        on:click={() => dispatch('dateSelected', day.date)}\n      >\n        {day.date.getDate()}\n      </button>\n    </div>\n  {/each}\n</div>\n\n<style>\n  .week { \n    padding: 0;\n    margin: 0;\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    flex-flow: row;\n    -webkit-flex-flow: row;\n    justify-content: space-around;\n    -ms-grid-column: 1;\n    grid-column: 1; \n  }\n  .week:nth-child(6n + 1) { \n    -ms-grid-row: 1; \n    grid-row: 1; \n  }\n  .week:nth-child(6n + 2) { \n    -ms-grid-row: 2; \n    grid-row: 2; \n  }\n  .week:nth-child(6n + 3) { \n    -ms-grid-row: 3; \n    grid-row: 3; \n  }\n  .week:nth-child(6n + 4) { \n    -ms-grid-row: 4; \n    grid-row: 4; \n  }\n  .week:nth-child(6n + 5) { \n    -ms-grid-row: 5; \n    grid-row: 5; \n  }\n  .week:nth-child(6n + 6) { \n    -ms-grid-row: 6; \n    grid-row: 6; \n  }\n  .day { \n    margin: 2px;\n    color: var(--day-text-color);\n    font-weight: bold;\n    text-align: center;\n    font-size: 16px;\n    flex: 1 0 auto;\n    height: auto;\n    display: flex; \n    flex-basis: 0;\n  }\n  .day.outside-month, \n  .day.is-disabled { \n    opacity: 0.35;\n  }\n  .day:before { \n    content: '';\n    float: left;\n    padding-top: 100%;\n  }\n  .day--label { \n    color: var(--day-text-color);\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    width: 100%;\n    position: relative;\n    border: 1px solid #fff;\n    border-radius: 50%; \n    margin: 10%;\n    padding: 0;\n    align-items: center;\n    background: var(--day-background-color);\n    cursor: pointer;\n    transition: all 100ms linear;\n    font-weight: normal;\n  }\n  .day--label.disabled { \n    cursor: default;\n  }\n  @media (min-width: 480px) { \n    .day--label.highlighted,\n    .day--label:not(.disabled):hover { \n      background: var(--day-highlighted-background-color);\n      border-color: var(--day-highlighted-background-color);\n      color: var(--day-highlighted-text-color);\n    }\n  }\n  .day--label.shake-date { \n    animation: shake 0.4s 1 linear;\n  }\n  .day--label.selected:hover,\n  .day--label.selected,\n  .day--label:active:not(.disabled) { \n    background-color: var(--highlight-color);\n    border-color: var(--highlight-color);\n    color: #fff;\n  }\n  .day.is-today .day--label, \n  .day.is-today .day--label:hover { \n    opacity: 1; \n    background: none;\n    border-color: var(--highlight-color);\n    color: #000;\n  }\n\n  @keyframes shake {\n    0% { transform: translate(7px); }\n    20% { transform: translate(-7px); }\n    40% { transform: translate(3px); }\n    60% { transform: translate(-3px); }\n    80% { transform: translate(1px); }\n    100% { transform: translate(0px); }\n  }\n</style>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let columns;\n  export let rows;\n  export let sortBy = \"\";\n  export let sortOrder = 1;\n  export let iconAsc = '▲';\n  export let iconDesc = '▼';\n  export let classNameTable = '';\n  export let classNameThead = '';\n  export let classNameTbody = '';\n  export let classNameSelect = '';\n  export let classNameRow = '';\n  export let classNameCell = '';\n  export let filterSelections = {};\n\n  let sortFunction = () => \"\";\n  let showFilterHeader = columns.some(c => {\n    // check if there are any filter or search headers\n    return c.filterOptions !== undefined || c.searchValue !== undefined\n  });\n  let filterValues = {};\n  let searchValues = {};\n  let columnByKey;\n  $: {\n    columnByKey = {};\n    columns.forEach(col => {\n      columnByKey[col.key] = col;\n    });\n  }\n\n  $: c_rows = rows\n    .filter(r => {\n      // get search and filter results/matches\n      return Object.keys(filterSelections).every(f => {\n          // check search (text input) matches\n          let resSearch =\n            filterSelections[f] === \"\" ||\n            (columnByKey[f].searchValue &&\n              (columnByKey[f].searchValue(r) + \"\")\n                .toLocaleLowerCase()\n                .indexOf((filterSelections[f] + \"\").toLocaleLowerCase()) >= 0);\n            \n          // check filter (dropdown) matches\n          let resFilter =\n            resSearch ||\n            filterSelections[f] === undefined ||\n            // default to value() if filterValue() not provided in col\n            filterSelections[f] ===\n              (typeof columnByKey[f].filterValue === \"function\"\n                ? columnByKey[f].filterValue(r)\n                : columnByKey[f].value(r));\n          return resFilter;\n        })\n      }\n    )\n    .map(r => (Object.assign({}, r, {$sortOn: sortFunction(r)} ) ) )\n    .sort((a, b) => {\n      if (a.$sortOn > b.$sortOn) return sortOrder;\n      else if (a.$sortOn < b.$sortOn) return -sortOrder;\n      return 0;\n    });\n\n  const asStringArray = (v) => [].concat(v).filter(v => typeof v === 'string' && v !== \"\").join(' ');\n\n  const calculateFilterValues = () => {\n    filterValues = {};\n    columns.forEach(c => {\n      if (typeof c.filterOptions === \"function\") {\n        filterValues[c.key] = c.filterOptions(rows);\n      } else if (Array.isArray(c.filterOptions)) {\n        // if array of strings is provided, use it for name and value\n        filterValues[c.key] = c.filterOptions.map(val => ({name:val, value:val}));\n      }\n    });\n  };\n\n  $: {\n    let col = columnByKey[sortBy];\n    if (col !== undefined && col.sortable === true && typeof col.value === \"function\") {\n      sortFunction = r => col.value(r);\n    }\n  };\n\n  $: {\n    // if filters are enabled, watch rows and columns\n    if (showFilterHeader && columns && rows) {\n      calculateFilterValues();\n    }\n  };\n\n  const updateSortOrder = (colKey) => {\n    if (colKey === sortBy) {\n      sortOrder = sortOrder === 1 ? -1 : 1\n    } else {\n      sortOrder = 1;\n    }\n  }\n\n  const handleClickCol = (event, col) => {\n    updateSortOrder(col.key)\n    sortBy = col.key;\n    dispatch('clickCol', {event, col, key:col.key} );\n  }\n\n  const handleClickRow = (event, row) => {\n    dispatch('clickRow', {event, row} );\n  }\n\n  const handleClickCell = (event, row, key) => {\n    dispatch('clickCell', {event, row, key} );\n  }\n\n</script>\n\n<style>\n  table {\n    width: 100%;\n  }\n  .isSortable {\n    cursor: pointer;\n  }\n\n  tr th select {\n    width: 100%;\n  }\n</style>\n\n<table class={asStringArray(classNameTable)}>\n  <thead class={asStringArray(classNameThead)}>\n    {#if showFilterHeader}\n      <tr>\n        {#each columns as col}\n          <th>\n            {#if col.searchValue !== undefined}\n              <input bind:value={filterSelections[col.key]}>\n            {:else if filterValues[col.key] !== undefined}\n              <select bind:value={filterSelections[col.key]} class={asStringArray(classNameSelect)}>\n                <option value={undefined}></option>\n                {#each filterValues[col.key] as option}\n                  <option value={option.value}>{option.name}</option>\n                {/each}\n              </select>\n            {/if}\n          </th>\n        {/each}\n      </tr>\n    {/if}\n    <slot name=\"header\" sortOrder={sortOrder} sortBy={sortBy}>\n      <tr>\n        {#each columns as col}\n          {#if col.sortable}\n            <th\n              on:click={(e) => handleClickCol(e, col)}\n              class={asStringArray(['isSortable', col.headerClass])}\n            >\n              {col.title}\n              {#if sortBy === col.key}\n                { sortOrder === 1 ? iconAsc : iconDesc}\n              {/if}\n            </th>\n          {:else}\n            <th\n              class={col.headerClass}\n            >\n              {col.title}\n              {#if sortBy === col.key}\n                { sortOrder === 1 ? iconAsc : iconDesc}\n              {/if}\n            </th>\n          {/if}\n        {/each}\n      </tr>\n    </slot>\n  </thead>\n  <tbody class={asStringArray(classNameTbody)}>\n    {#each c_rows as row, n}\n      <slot name=\"row\" row={row} n={n} >\n        <tr on:click={(e)=>{handleClickRow(e, row)}} class={asStringArray(classNameRow)}>\n          {#each columns as col}\n            <td\n              on:click={(e)=>{handleClickCell(e, row, col.key)}}\n              class={asStringArray([col.class, classNameCell])}\n            >\n              {#if col.renderComponent}\n                <svelte:component\n                  this={col.renderComponent.component || col.renderComponent} {...(col.renderComponent.props || {})}\n                  row={row}\n                  col={col}\n                />\n              {:else}\n                {@html col.renderValue ? col.renderValue(row) : col.value(row)}\n              {/if}\n            </td>\n          {/each}\n        </tr>\n      </slot>\n    {/each}\n  </tbody>\n</table>\n",
    "<script>\n\timport { onMount } from 'svelte';\n\n\tlet el;\n\n\texport let data = {data};\n\tdata = data[data.length-1]; // only get the latest day's info\n</script>\n\n<style>\n\t#homepagebrief {\n\t\ttext-align:center;\n\t\tcolor:white;\n\t}\n\n\t#homepagebrief .brief-grid-item {\n\t\tdisplay:block;\n\t\tmargin:0 auto 2rem;\n\t}\n\n\t#homepagebrief h3 {\n\t\tfont-size:1rem;\n\t\tmargin:0 auto;\n\t}\n\n\t#homepagebrief span.brief-stat {\n\t\tfont-size:2rem;\n\t\tfont-weight:bold;\n\t}\n\n\n\n\t/* @media screen and (max-width:600px) {\n\t\t#brief {\n\t\t\tgrid-template-columns: 1fr 1fr;\n\t\t\tgrid-template-rows: 1fr 1fr;\n\t\t\tgap: 10px 10px;\n\t\t\tgrid-template-areas: \". .\" \". .\";\n\t\t}\n\n\t\t#breakdown {\n\t\t\tmargin-top:2.3rem\n\t\t}\n\n\t\th3.posheader {\n\t\t\t/* position:relative;\n\t\t\tleft:50%;\n\t\t}\n\t}*/\n</style>\n\n<div bind:this={el} class=\"homepagebrief\" id=\"homepagebrief\">\n\t<div class=\"brief-grid-item\">\n\t\t<h3>Tests Completed</h3>\n\t\t<span class=\"brief-stat\">{(data[\"Total Tests\"]).toLocaleString('en-US')}</span>\n\t</div>\n\t<div class=\"brief-grid-item\">\n\t\t<h3>Negative Tests</h3>\n\t\t<span class=\"brief-stat\">{(data[\"Total Negative\"]).toLocaleString('en-US')}</span>\n\t</div>\n\t<div class=\"brief-grid-item\">\n\t\t<h3 class=\"posheader\">Positive Tests</h3>\n\t\t<span class=\"brief-stat\">{(data[\"Total Positive\"]).toLocaleString('en-US')}</span>\n\t</div>\n</div>\n",
    "<script>\nimport { onMount } from 'svelte';\nimport { scaleLinear, scaleBand, scaleOrdinal } from 'd3-scale';\nimport { axisLeft, axisRight, axisTop, axisBottom } from 'd3-axis';\nimport { select, mouse } from 'd3-selection';\nimport { line, curveMonotoneX, curveNatural } from 'd3-shape';\nimport { path } from 'd3-path';\nimport { interpolateRound } from 'd3-interpolate';\nimport 'd3-transition'\nimport { legendColor } from 'd3-svg-legend';\n\nlet d3 = {\n\tscaleLinear: scaleLinear,\n\tscaleBand: scaleBand,\n\tscaleOrdinal: scaleOrdinal,\n\tselect: select,\n\tmouse: mouse,\n\taxisLeft: axisLeft,\n\taxisRight: axisRight,\n\taxisBottom: axisBottom,\n\taxisTop: axisTop,\n\tline: line,\n\tpath: path,\n\tcurveMonotoneX: curveMonotoneX,\n\tcurveNatural: curveNatural,\n\tinterpolateRound: interpolateRound,\n\tlegendColor: legendColor\n}\n\nlet el;\n\nconst padding = { top: 50, right: 0, bottom: 40, left: 40 };\n\n\n\nexport let data = {data};\nexport let width = {width};\nexport let height = {height};\nexport let xVar = {xVar};\nexport let yVar = {yVar};\nexport let yGroups = {yGroups: value};\nexport let colorscheme = {colorscheme};\nexport let colorsteps = yGroups.length;\nexport let len = data.length;\n\n// for (let k=0; k < (len-31); k++) {\n// \tdata.shift()\n// }\n\n\n// data.forEach(function(d,i){\n// \tif (i > (avgdaycount-2)) {\n// \t\tlet array = [];\n// \t\tfor (let j=0;  j<avgdaycount; j++) {\n// \t\t\tarray.push( +data[i-j][yVar] )\n// \t\t}\n// \t\tlet avg = array.reduce((a, b) => a + b, 0) / avgdaycount;\n// \t\tdata[i][\"rollingavg\"] = Math.round(avg);\n// \t}\n// })\n\n$: xScale = d3.scaleBand()\n\t.domain(data.map(function(o) { return o[xVar]; }))\n\t.range([1, width - padding.left - padding.right])\n\t.padding(0.1);\n\n$: yScale = d3.scaleLinear()\n\t.domain([0, Math.max.apply(Math, data.map(function(o) { return o[yVar]; }))])\n\t.range([height - padding.bottom, padding.top])\n\t.nice();\n\n$: colors = d3.scaleOrdinal()\n\t.domain(yGroups)\n\t.range(colorscheme)\n\nfunction showTip(d, target, mouse) {\n\ttarget\n\t\t.style(\"position\", \"absolute\")\n\t\t.style(\"left\", (mouse[0] - 100) + \"px\")\n\t\t.style(\"top\", (mouse[1] - 150) + \"px\")\n\t\t.style(\"display\", \"inline-block\")\n\t\t.html(\n\t\t\tfunction(g) {\n\t\t\t\tlet arr = [];\n\t\t\t\tfor (g=0; g<yGroups.length; g++) {\n\t\t\t\t\tarr.push(\"<br/>\" + yGroups[g] + \": \" + d[yGroups[g]])\n\t\t\t\t}\n\t\t\t\treturn \"<div class='tipdate'>\" + d[xVar] + \"</div>\" + arr.join(' ')\n\t\t\t}\n\n\t\t);\n}\n\nonMount(generateColumnChart);\n\nfunction generateColumnChart() {\n\n\tvar tooltip = d3.select(el).append(\"div\").attr(\"class\", \"tooltip\");\n\n\tvar svg = d3.select(el)\n\t\t.append(\"svg\")\n\t\t.attr(\"width\", width)\n\t\t.attr(\"height\", height)\n\t\t.append(\"g\")\n\t\t.attr(\"transform\",\n\t\t\"translate(\" + padding.left + \",\" + 0 + \")\");\n\n\tlet axisBottomRender = svg.append(\"g\")\n\t\t.attr(\"transform\", \"translate(0,\" + (height-padding.bottom) + \")\")\n\t\t.attr(\"class\",\"horizontalAxis\")\n\t\t.call(\n\t\t\td3.axisBottom(xScale)\n\t\t\t\t// .tickValues(xScale.domain().filter(function(d,i){\n\t\t\t\t// \tconsole.log(d)\n\t\t\t\t// \t// let tickCount = Math.round(xScale.domain().length/10);\n\t\t\t\t// \t// let lastTick = xScale.domain().length-1;\n\t\t\t\t// \t// return ((i % tickCount) === (lastTick % tickCount))\n\t\t\t\t// }))\n\t\t\t\t.tickSize(0)\n\t\t);\n\n\taxisBottomRender.selectAll(\"path\")\n\t\t.attr(\"stroke\", \"#ccc\");\n\n\taxisBottomRender.selectAll(\"text\")\n\t\t.style(\"text-anchor\", \"end\")\n\t\t.attr(\"transform\", (\"rotate(-45)\"))\n\t\t.attr(\"dx\", -3)\n\t\t.attr(\"dy\", 3.5)\n\n\n\tlet axisVerticalRender = svg.append(\"g\")\n\t\t.attr(\"class\",\"verticalAxis\")\n\t\t.call(\n\t\t\td3.axisLeft(yScale)\n\t\t\t\t.ticks(Math.min(6, yScale.domain()[1]))\n\t\t\t\t.tickSize(0)\n\t\t);\n\n\taxisVerticalRender.selectAll(\"path\")\n\t\t.attr(\"stroke\", \"#ccc\");\n\n\t// add data columns\n\tfor (let i=0; i<yGroups.length; i++) {\n\t\tsvg.append('g')\n\t\t\t.selectAll(\"rect\")\n\t\t\t.data(data)\n\t\t\t.enter()\n\t\t\t.append(\"rect\")\n\t\t\t.attr(\"fill\", colors(yGroups[i]))\n\t\t\t.attr(\"x\", function (d) { return xScale(d[xVar]); })\n\t\t\t.attr(\"y\", function (d) {\n\t\t\t\tlet barheight = 0;\n\t\t\t\tfor (let j=i; j>-1; j = j-1) {\n\t\t\t\t\tbarheight += d[yGroups[j]]\n\t\t\t\t}\n\t\t\t\treturn yScale(barheight)\n\t\t\t})\n\t\t\t.attr(\"width\", xScale.bandwidth())\n\t\t\t.attr(\"height\", function(d) {\n\t\t\t\treturn height - padding.bottom - yScale(d[yGroups[i]]);\n\t\t\t})\n\t\t\t.on(\"mousemove\", function(d){\n\t\t\t\tif (window.innerWidth > 600) {\n\t\t\t\t\tshowTip(d, tooltip, d3.mouse(this))\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on(\"mouseout\", function(d){\n\t\t\t\ttooltip.style(\"display\", \"none\")\n\t\t\t});\n\t}\n\n\n}\n</script>\n\n<style>\n.chart :global() {\n\tposition:relative;\n}\n.chart :global(rect) {\n\t/* fill: #cfbabc; */\n}\n\n.chart :global(.tooltip) {\n\tdisplay:none;\n\tposition: absolute;\n\tbackground-color: white;\n\tborder:2px solid black;\n\tborder-radius:10px;\n\tpadding: 10px;\n\twidth:300px;\n}\n\n.chart :global(.legendCells .cell) {\n\tfont-size:0.65rem;\n\tfill: #777;\n\ttext-transform:uppercase;\n}\n\n.chart :global(.tipdate) {\n\tfont-size:1.2rem;\n\tfont-weight:bold;\n\tmargin:0 auto;\n}\n\n/* .chart :global(.horizontalAxis .tick text) {\n\t visibility: hidden;\n}\n\n\n.chart :global(.horizontalAxis .tick:nth-last-child(7n+1) text) {\n\t visibility: visible;\n}\n\n@media screen and (max-width:600px) {\n\t.chart :global(.horizontalAxis .tick:nth-last-child(7n+1) text) {\n\t\t visibility: hidden;\n\t}\n\n\t.chart :global(.horizontalAxis .tick:nth-last-child(14n+1) text) {\n\t\t visibility: visible;\n\t}\n} */\n\n</style>\n\n<div bind:this={el} class=\"chart\"></div>\n",
    "<script>\n    import {onMount} from 'svelte';\n    import {\n        scaleBand,\n        scaleLinear,\n        scaleOrdinal,\n        scaleQuantile,\n        scaleQuantize,\n        scaleThreshold\n    } from 'd3-scale';\n    import {axisBottom, axisLeft, axisRight, axisTop} from 'd3-axis';\n    import {select} from 'd3-selection';\n    import {legendColor, legendSize} from 'd3-svg-legend';\n\n    let d3 = {\n        scaleLinear: scaleLinear,\n        scaleBand: scaleBand,\n        scaleOrdinal: scaleOrdinal,\n        scaleQuantize: scaleQuantize,\n        scaleQuantile: scaleQuantile,\n        scaleThreshold: scaleThreshold,\n        select: select,\n        axisLeft: axisLeft,\n        axisRight: axisRight,\n        axisBottom: axisBottom,\n        axisTop: axisTop,\n        legendColor: legendColor,\n        legendSize: legendSize\n    }\n\n\n    export let data = [];\n    export let width = {width};\n    export let groups = {groups};\n    export let columns = {columns};\n    export let isPercentage = {isPercentage};\n    export let colors = {colors};\n    export let labels = {labels};\n    export let footnotes = {footnotes}\n    export let orientation = \"horizontal\";\n\n    const padding = {top: 20, right: 0, bottom: 0, left: 20};\n    let cellColors = colors.map((x) => x);\n    let cellBounds = [0]\n    let totalItems = 0;\n    let totalCells = 0;\n    let cellValue = 1;\n    let cells = [0];\n    let numRows;\n    let el;\n\n    for (let i in groups) {\n        totalItems = data[groups[i]] + totalItems;\n        totalCells = totalItems;\n    }\n\n    if (isPercentage) {\n        cellValue = totalItems / 100;\n        totalCells = 100;\n    }\n\n    // Determine how many cells each group fills.\n    for (let i in groups) {\n        let groupValue = data[groups[i]] / cellValue;\n        let subtotal = Math.round(groupValue) + cells[cells.length - 1];\n\n        if (isPercentage && 100 < subtotal) {\n            subtotal = 100;\n        }\n\n        cells.push(subtotal);\n    }\n\n\n    /**\n     * If it's a percentage, use 100 cells. Otherwise, usa a 1:1 cell/data point\n     */\n    if (isPercentage) {\n        numRows = Math.round(100 / columns)\n    } else {\n        numRows = Math.ceil(totalItems / columns)\n    }\n\n    let cellSize = Math.floor(width / columns) - 1;\n\n    $: rows = numRows\n    $: height = (rows * (cellSize + 1)) * 1.25\n    $: xScale = d3.scaleLinear()\n        .domain([0, totalItems])\n        .range([0, columns * cellSize]);\n    $: colorScale = d3\n        .scaleQuantile()\n        .domain(cells)\n        .range(cellColors.splice(0, cells.length - 1));\n\n    onMount(generateWaffleChart);\n\n    /**\n     * Creates the graph.\n     *\n     * @since 1.0\n     */\n    function generateWaffleChart() {\n        const graphContainer = d3.select(el);\n\n        // Adds graph.\n        let graph = graphContainer\n            .append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height + padding.top + 20);\n\n        let group = graph.append(\"g\")\n            .attr(\"transform\",\n                \"translate(\" + padding.left + \",\" + padding.top + \")\")\n\n        group.append(\"text\")\n            .attr(\"class\", \"chart-label\")\n            .text(totalItems + \" cases\")\n\n\n        for (let i = 0; i < totalCells; i++) {\n            group.append(\"circle\")\n                .attr(\"aria-label\", cellValue + ' cases')\n                .attr(\"class\", \"rect\" + i)\n                .attr(\"cx\", Math.floor(i / rows) * (cellSize + 1))\n                .attr(\"cy\", ((i % rows) * (cellSize + 1)) + 40)\n                .attr(\"r\", cellSize / 2)\n                .attr(\"fill\", colorScale(i))\n                .attr(\"data-index\", i)\n        }\n\n        // Adds legend.\n        const graphLegend = graphContainer\n            .append(\"div\")\n            .attr(\"class\", \"legend\");\n\n        for (let i = 0; i < labels.length; i++) {\n            let legendCell = graphLegend\n                .append(\"div\")\n                .attr(\"class\", \"legend-key\");\n\n            legendCell\n                .append(\"span\")\n                .attr(\"class\", \"legend-key-indicator\")\n                .style(\"background-color\", colors[i])\n                .style(\"width\",  0.75 * cellSize + \"px\")\n                .style(\"height\",  0.75 * cellSize + \"px\")\n\n            legendCell\n                .append(\"div\")\n                .attr(\"class\", \"legend-key-label\")\n                .text(function (d) {\n                    return labels[i];\n                })\n        }\n\n        // Adds footnotes\n        if (0 < footnotes.length) {\n            const graphFootnotes = graphContainer\n                .append(\"div\")\n                .attr(\"class\", \"footnotes\");\n\n            for (let i = 0; i < footnotes.length; i++) {\n                let footnote = graphFootnotes\n                    .append(\"div\")\n                    .attr(\"class\", \"footnote\")\n                    .append(\"small\")\n                    .attr(\"class\", \"footnote-body\")\n                    .text(function (d) {\n                        return footnotes[i];\n                    });\n            }\n        }\n\n    }\n\n</script>\n\n<style>\n\n    .chart :global(.legend) {\n        display: flex;\n        justify-content: space-around;\n    }\n\n    .chart :global(.legend-key) {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        padding: 0 50px 0 0;\n    }\n\n    .chart :global(.legend-key-indicator) {\n        border-radius: 50%;\n        display: block;\n    }\n\n    .chart :global(.legend-key-label) {\n        color: var(--chart--key-color);\n        font-family: var(--chart--key-font);\n        font-size: var(--chart--key-font-size);\n        padding: 10px 0;\n        text-align: center;\n        text-transform: uppercase;\n    }\n\n    .chart :global(.footnotes) {\n        margin-top: var(--chart--footnote-margin);\n        color: var(--chart--footnote-color);\n        font-family: var(--chart--footnote-font);\n        font-size: var(--chart--footnote-font-size);\n        font-weight: var(--chart--footnote-weight);\n        line-height: var(--chart--footnote-line-height);\n        text-align: left\n    }\n\n\n    .chart :global(text) {\n        font-family: var(--chart--title-font);\n        font-size: var(--chart--title-font-size);\n        text-transform: uppercase;\n    }\n\n    .chart :global(.chart-label) {\n        text-align: var(--chart--title-text-align);\n        font-size: var(--chart--title-font-size);\n        color: var(--chart--title-color);\n        font-weight: var(--chart--title-weight);\n        margin-bottom: 0;\n    }\n\n    .chart :global(g.tick line) {\n        stroke: #ccc;\n    }\n\n    .chart :global(.legendContainer) {\n        display: block;\n        margin: 0 auto;\n        padding: 10px 0;\n        border: 1px solid #ccc;\n        border-radius: 3px;\n    }\n\n    .chart :global(.legendContainer text) {\n        font-family: 'akkurat', sans-serif;\n        text-transform: uppercase;\n        fill: #666;\n        font-size: 11px;\n    }\n\n    .stats {\n        display: grid;\n        grid-template-columns: var(--proportions);\n        margin: 0\n    }\n\n    .stats div {\n        font-family: 'akkurat', sans-serif;\n        font-size: 11px;\n        text-transform: uppercase;\n    }\n\n    h3 {\n        font-family: 'akkurat', sans-serif;\n        font-size: 1.5rem;\n        text-transform: unset;\n        margin: 0 auto 1rem;\n    }\n</style>\n\n<div bind:this={el} class=\"chart\"></div>\n",
    "<script>\n\n   export let source;\n   export let note;\n\n</script>\n\n<style>\n   #graphic-footer {\n      display: block;\n      width:100%;\n   }\n\n   #footer-meta span {\n      display:block;\n      color: #666;\n      font-size:0.75rem;\n   }\n\n   #footer-meta .nav__logo-mod .logo__news {\n      fill: #000;\n   }\n\n\n</style>\n\n<div id=\"graphic-footer\">\n   <div id=\"footer-meta\">\n      <span class=\"graphic-footer-text\">SOURCE: {source}</span>\n      <!-- <span class=\"graphic-footer-text\">NOTE: {note}</span> -->\n   </div>\n</div>\n",
    "<script>\n\n   export let title;\n   export let subhed;\n\n</script>\n\n<style>\n   h2.graphictitle {\n      margin:0 0 2rem 0;\n      display: block;\n      font-size:1.5em;\n      font-weight:700;\n      font-family: \"akkurat\",sans-serif\n   }\n</style>\n\n<h2 class=\"graphictitle\">{title}</h2>\n<!-- <span class=\"graphicsubhed\">{subhed}</span> -->\n"
  ],
  "names": [],
  "mappings": "AA2TE,WAAW,8BAAC,CAAC,AACX,OAAO,CAAE,YAAY,CACrB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,UAAU,CAAE,MAAM,CAClB,QAAQ,CAAE,OAAO,AACnB,CAAC,AAED,gBAAgB,8BAAC,CAAC,AAChB,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,qBAAqB,CAAC,CAC5C,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,KAAK,CACZ,eAAe,CAAE,IAAI,CACrB,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,IAAI,yBAAyB,CAAC,CAC1C,KAAK,CAAE,IAAI,mBAAmB,CAAC,CAC/B,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AAC5C,CAAC,AAED,8BAAC,CACD,8BAAC,OAAO,CACR,8BAAC,MAAM,AAAC,CAAC,AACP,UAAU,CAAE,OAAO,AACrB,CAAC,AAED,SAAS,8BAAC,CAAC,AACT,UAAU,CAAE,UAAU,CACtB,QAAQ,CAAE,QAAQ,CAClB,QAAQ,CAAE,MAAM,CAChB,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,CAAC,AAChB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,SAAS,8BAAC,CAAC,AACT,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,IAAI,AACjB,CAAC,AACH,CAAC,AAED,OAAO,8BAAC,CAAC,AACP,KAAK,CAAE,OAAO,CACd,OAAO,CAAE,IAAI,CAAC,CAAC,CACf,aAAa,CAAE,GAAG,AACpB,CAAC,AAED,sBAAO,CAAC,IAAI,eAAC,CAAC,AACZ,KAAK,CAAE,UAAU,CACjB,OAAO,CAAE,YAAY,CACrB,UAAU,CAAE,MAAM,AACpB,CAAC;AClVD,gBAAgB,cAAC,CAAC,AAChB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,QAAQ,CACjB,OAAO,CAAE,IAAI,CACb,gBAAgB,CAAE,GAAG,CACrB,aAAa,CAAE,GAAG,AACpB,CAAC;ACuCD,gBAAgB,8BAAC,CAAC,AAChB,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,KAAK,CAAE,OAAO,CACd,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,MAAM,8BAAC,CAAC,AACN,MAAM,CAAE,OAAO,AACjB,CAAC,AACD,eAAe,8BAAC,CAAC,AACf,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,CACT,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,CACT,gBAAgB,CAAE,IAAI,CACtB,UAAU,CAAE,GAAG,CAAC,KAAK,CACrB,SAAS,CAAE,MAAM,GAAG,CAAC,CACrB,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,eAAe,KAAK,8BAAC,CAAC,AACpB,SAAS,CAAE,MAAM,CAAC,CAAC,CACnB,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,sBAAsB,8BAAC,CAAC,AACtB,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,GAAG,CACX,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,OAAO,CAAE,GAAG,AACd,CAAC,AACD,sBAAsB,WAAW,8BAAC,CAAC,AACjC,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,sBAAsB,yCAAW,MAAM,AAAC,CAAC,AACvC,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,AAC1C,CAAC,AACD,sBAAsB,SAAS,8BAAC,CAAC,AAC/B,UAAU,CAAE,IAAI,iBAAiB,CAAC,CAClC,KAAK,CAAE,IAAI,AACb,CAAC,AACD,oDAAsB,OAAO,AAAC,CAAC,AAC7B,OAAO,CAAE,GAAG,CACZ,OAAO,CAAE,YAAY,CACrB,MAAM,CAAE,IAAI,CACZ,cAAc,CAAE,MAAM,AACxB,CAAC,AACD,qCAAsB,CAAC,IAAI,eAAC,CAAC,AAC3B,cAAc,CAAE,MAAM,CACtB,OAAO,CAAE,YAAY,AACvB,CAAC,AAED,QAAQ,8BAAC,CAAC,AACR,OAAO,CAAE,CAAC,CAAC,GAAG,CACd,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,WAAW,GAAG,CAAC,AAC5B,CAAC,AAED,QAAQ,QAAQ,8BAAC,CAAC,AAChB,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,MAAM,8BAAC,CAAC,AACN,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,KAAK,CACnB,YAAY,CAAE,OAAO,CACrB,YAAY,CAAE,CAAC,CACf,mBAAmB,CAAE,GAAG,CACxB,kBAAkB,CAAE,GAAG,AACzB,CAAC,AAED,MAAM,MAAM,8BAAC,CAAC,AACZ,SAAS,CAAE,OAAO,MAAM,CAAC,CACzB,iBAAiB,CAAE,OAAO,MAAM,CAAC,AACnC,CAAC,AAED,MAAM,KAAK,8BAAC,CAAC,AACX,SAAS,CAAE,OAAO,MAAM,CAAC,CACzB,iBAAiB,CAAE,OAAO,MAAM,CAAC,AACnC,CAAC;AC9CD,WAAW,4BAAC,CAAC,AACX,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,iBAAiB,4BAAC,CAAC,AACjB,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,CAChC,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,CAAC,CACV,OAAO,CAAE,IAAI,AACf,CAAC,AAED,SAAS,4BAAC,CAAC,AACT,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAC1C,OAAO,CAAE,EAAE,CACX,WAAW,CAAE,CAAC,CACd,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,kBAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,AAC/D,CAAC,AAED,eAAe,4BAAC,CAAC,AACf,SAAS,CAAE,oBAAM,CAAC,KAAK,CAAC,QAAQ,AAClC,CAAC,AAED,iBAAiB,QAAQ,4BAAC,CAAC,AACzB,OAAO,CAAE,KAAK,AAChB,CAAC,AAED,iBAAiB,sBAAQ,CAAC,SAAS,cAAC,CAAC,AACnC,OAAO,CAAE,CAAC,CACV,SAAS,CAAE,MAAM,CAAC,CAAC,CACnB,OAAO,CAAE,KAAK,AAChB,CAAC,AAED,iBAAiB,qBAAO,CAAC,SAAS,cAAC,CAAC,AAClC,SAAS,CAAE,oBAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,AACjE,CAAC,AAED,WAAW,kBAAK,CAAC,AACf,EAAE,AAAC,CAAC,AACF,SAAS,CAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CACvB,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,GAAG,AAAC,CAAC,AACH,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,SAAS,CAAE,MAAM,CAAC,CAAC,AACrB,CAAC,AACH,CAAC,AAED,WAAW,oBAAO,CAAC,AACjB,EAAE,AAAC,CAAC,AACF,SAAS,CAAE,MAAM,CAAC,CAAC,CACnB,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,GAAG,AAAC,CAAC,AACH,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,OAAO,CAAE,CAAC,CACV,SAAS,CAAE,MAAM,EAAE,CAAC,EAAE,CAAC,AACzB,CAAC,AACH,CAAC,AAED,WAAW,oBAAO,CAAC,AACjB,EAAE,AAAC,CAAC,AACF,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,GAAG,AAAC,CAAC,AACH,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,OAAO,CAAE,CAAC,AACZ,CAAC,AACH,CAAC;AC9JD,KAAK,8BAAC,CAAC,AACL,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,WAAW,CACpB,OAAO,CAAE,QAAQ,CACjB,OAAO,CAAE,WAAW,CACpB,OAAO,CAAE,YAAY,CACrB,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,GAAG,CACd,iBAAiB,CAAE,GAAG,CACtB,eAAe,CAAE,YAAY,CAC7B,eAAe,CAAE,CAAC,CAClB,WAAW,CAAE,CAAC,AAChB,CAAC,AACD,mCAAK,WAAW,MAAM,CAAC,AAAC,CAAC,AACvB,YAAY,CAAE,CAAC,CACf,QAAQ,CAAE,CAAC,AACb,CAAC,AACD,mCAAK,WAAW,MAAM,CAAC,AAAC,CAAC,AACvB,YAAY,CAAE,CAAC,CACf,QAAQ,CAAE,CAAC,AACb,CAAC,AACD,mCAAK,WAAW,MAAM,CAAC,AAAC,CAAC,AACvB,YAAY,CAAE,CAAC,CACf,QAAQ,CAAE,CAAC,AACb,CAAC,AACD,mCAAK,WAAW,MAAM,CAAC,AAAC,CAAC,AACvB,YAAY,CAAE,CAAC,CACf,QAAQ,CAAE,CAAC,AACb,CAAC,AACD,mCAAK,WAAW,MAAM,CAAC,AAAC,CAAC,AACvB,YAAY,CAAE,CAAC,CACf,QAAQ,CAAE,CAAC,AACb,CAAC,AACD,mCAAK,WAAW,MAAM,CAAC,AAAC,CAAC,AACvB,YAAY,CAAE,CAAC,CACf,QAAQ,CAAE,CAAC,AACb,CAAC,AACD,IAAI,8BAAC,CAAC,AACJ,MAAM,CAAE,GAAG,CACX,KAAK,CAAE,IAAI,gBAAgB,CAAC,CAC5B,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,IAAI,CACf,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CACd,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,CAAC,AACf,CAAC,AACD,IAAI,4CAAc,CAClB,IAAI,YAAY,8BAAC,CAAC,AAChB,OAAO,CAAE,IAAI,AACf,CAAC,AACD,kCAAI,OAAO,AAAC,CAAC,AACX,OAAO,CAAE,EAAE,CACX,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,WAAW,8BAAC,CAAC,AACX,KAAK,CAAE,IAAI,gBAAgB,CAAC,CAC5B,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,cAAc,CAAE,MAAM,CACtB,KAAK,CAAE,IAAI,CACX,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,CAAC,CACV,WAAW,CAAE,MAAM,CACnB,UAAU,CAAE,IAAI,sBAAsB,CAAC,CACvC,MAAM,CAAE,OAAO,CACf,QAAQ,EAAE,CAAE,GAAG,CAAC,KAAK,CAAC,MAAM,CAC5B,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,WAAW,SAAS,8BAAC,CAAC,AACpB,MAAM,CAAE,OAAO,AACjB,CAAC,AACD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,SAAS,EAAE,0CAAY,CACvB,yCAAW,KAAK,SAAS,CAAC,MAAM,AAAC,CAAC,AAChC,UAAU,CAAE,IAAI,kCAAkC,CAAC,CACnD,YAAY,CAAE,IAAI,OAAO,2BAA2B,CAAC,CACrD,KAAK,CAAE,IAAI,0BAA0B,EAAE,CAAC,AAC1C,CAAC,AACH,CAAC,AACD,WAAW,WAAW,8BAAC,CAAC,AACtB,SAAS,CAAE,oBAAK,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,AAChC,CAAC,AACD,WAAW,uCAAS,MAAM,CAC1B,WAAW,uCAAS,CACpB,yCAAW,OAAO,KAAK,SAAS,CAAC,AAAC,CAAC,AACjC,gBAAgB,CAAE,IAAI,iBAAiB,CAAC,CACxC,YAAY,CAAE,IAAI,iBAAiB,CAAC,CACpC,KAAK,CAAE,IAAI,AACb,CAAC,AACD,IAAI,wBAAS,CAAC,0BAAW,CACzB,IAAI,wBAAS,CAAC,0BAAW,MAAM,AAAC,CAAC,AAC/B,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,IAAI,CAChB,YAAY,CAAE,IAAI,iBAAiB,CAAC,CACpC,KAAK,CAAE,IAAI,AACb,CAAC,AAED,WAAW,oBAAM,CAAC,AAChB,EAAE,AAAC,CAAC,AAAC,SAAS,CAAE,UAAU,GAAG,CAAC,AAAE,CAAC,AACjC,GAAG,AAAC,CAAC,AAAC,SAAS,CAAE,UAAU,IAAI,CAAC,AAAE,CAAC,AACnC,GAAG,AAAC,CAAC,AAAC,SAAS,CAAE,UAAU,GAAG,CAAC,AAAE,CAAC,AAClC,GAAG,AAAC,CAAC,AAAC,SAAS,CAAE,UAAU,IAAI,CAAC,AAAE,CAAC,AACnC,GAAG,AAAC,CAAC,AAAC,SAAS,CAAE,UAAU,GAAG,CAAC,AAAE,CAAC,AAClC,IAAI,AAAC,CAAC,AAAC,SAAS,CAAE,UAAU,GAAG,CAAC,AAAE,CAAC,AACrC,CAAC;AClCD,KAAK,4BAAC,CAAC,AACL,KAAK,CAAE,IAAI,AACb,CAAC,AACD,WAAW,4BAAC,CAAC,AACX,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,gBAAE,CAAC,EAAE,CAAC,MAAM,cAAC,CAAC,AACZ,KAAK,CAAE,IAAI,AACb,CAAC;ACtHF,cAAc,4BAAC,CAAC,AACf,WAAW,MAAM,CACjB,MAAM,KAAK,AACZ,CAAC,AAED,4BAAc,CAAC,gBAAgB,cAAC,CAAC,AAChC,QAAQ,KAAK,CACb,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,AACnB,CAAC,AAED,4BAAc,CAAC,EAAE,cAAC,CAAC,AAClB,UAAU,IAAI,CACd,OAAO,CAAC,CAAC,IAAI,AACd,CAAC,AAED,4BAAc,CAAC,IAAI,WAAW,cAAC,CAAC,AAC/B,UAAU,IAAI,CACd,YAAY,IAAI,AACjB,CAAC;ACqJF,oBAAM,CAAC,AAAU,CAAC,AACjB,SAAS,QAAQ,AAClB,CAAC,AACD,oBAAM,CAAC,AAAQ,IAAI,AAAE,CAAC,AAEtB,CAAC,AAED,oBAAM,CAAC,AAAQ,QAAQ,AAAE,CAAC,AACzB,QAAQ,IAAI,CACZ,QAAQ,CAAE,QAAQ,CAClB,gBAAgB,CAAE,KAAK,CACvB,OAAO,GAAG,CAAC,KAAK,CAAC,KAAK,CACtB,cAAc,IAAI,CAClB,OAAO,CAAE,IAAI,CACb,MAAM,KAAK,AACZ,CAAC,AAED,oBAAM,CAAC,AAAQ,kBAAkB,AAAE,CAAC,AACnC,UAAU,OAAO,CACjB,IAAI,CAAE,IAAI,CACV,eAAe,SAAS,AACzB,CAAC,AAED,oBAAM,CAAC,AAAQ,QAAQ,AAAE,CAAC,AACzB,UAAU,MAAM,CAChB,YAAY,IAAI,CAChB,OAAO,CAAC,CAAC,IAAI,AACd,CAAC;ACxBG,qBAAM,CAAC,AAAQ,OAAO,AAAE,CAAC,AACrB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,YAAY,AACjC,CAAC,AAED,qBAAM,CAAC,AAAQ,WAAW,AAAE,CAAC,AACzB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,OAAO,CAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,AACvB,CAAC,AAED,qBAAM,CAAC,AAAQ,qBAAqB,AAAE,CAAC,AACnC,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,KAAK,AAClB,CAAC,AAED,qBAAM,CAAC,AAAQ,iBAAiB,AAAE,CAAC,AAC/B,KAAK,CAAE,IAAI,kBAAkB,CAAC,CAC9B,WAAW,CAAE,IAAI,iBAAiB,CAAC,CACnC,SAAS,CAAE,IAAI,sBAAsB,CAAC,CACtC,OAAO,CAAE,IAAI,CAAC,CAAC,CACf,UAAU,CAAE,MAAM,CAClB,cAAc,CAAE,SAAS,AAC7B,CAAC,AAED,qBAAM,CAAC,AAAQ,UAAU,AAAE,CAAC,AACxB,UAAU,CAAE,IAAI,wBAAwB,CAAC,CACzC,KAAK,CAAE,IAAI,uBAAuB,CAAC,CACnC,WAAW,CAAE,IAAI,sBAAsB,CAAC,CACxC,SAAS,CAAE,IAAI,2BAA2B,CAAC,CAC3C,WAAW,CAAE,IAAI,wBAAwB,CAAC,CAC1C,WAAW,CAAE,IAAI,6BAA6B,CAAC,CAC/C,UAAU,CAAE,IAAI;IACpB,CAAC,AAGD,qBAAM,CAAC,AAAQ,IAAI,AAAE,CAAC,AAClB,WAAW,CAAE,IAAI,mBAAmB,CAAC,CACrC,SAAS,CAAE,IAAI,wBAAwB,CAAC,CACxC,cAAc,CAAE,SAAS,AAC7B,CAAC,AAED,qBAAM,CAAC,AAAQ,YAAY,AAAE,CAAC,AAC1B,UAAU,CAAE,IAAI,yBAAyB,CAAC,CAC1C,SAAS,CAAE,IAAI,wBAAwB,CAAC,CACxC,KAAK,CAAE,IAAI,oBAAoB,CAAC,CAChC,WAAW,CAAE,IAAI,qBAAqB,CAAC,CACvC,aAAa,CAAE,CAAC,AACpB,CAAC,AAED,qBAAM,CAAC,AAAQ,WAAW,AAAE,CAAC,AACzB,MAAM,CAAE,IAAI,AAChB,CAAC,AAED,qBAAM,CAAC,AAAQ,gBAAgB,AAAE,CAAC,AAC9B,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,IAAI,CAAC,CAAC,CACf,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,aAAa,CAAE,GAAG,AACtB,CAAC,AAED,qBAAM,CAAC,AAAQ,qBAAqB,AAAE,CAAC,AACnC,WAAW,CAAE,SAAS,CAAC,CAAC,UAAU,CAClC,cAAc,CAAE,SAAS,CACzB,IAAI,CAAE,IAAI,CACV,SAAS,CAAE,IAAI,AACnB,CAAC;AChPF,eAAe,8BAAC,CAAC,AACd,OAAO,CAAE,KAAK,CACd,MAAM,IAAI,AACb,CAAC,AAED,2BAAY,CAAC,IAAI,eAAC,CAAC,AAChB,QAAQ,KAAK,CACb,KAAK,CAAE,IAAI,CACX,UAAU,OAAO,AACpB,CAAC;ACTD,EAAE,aAAa,eAAC,CAAC,AACd,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CACjB,OAAO,CAAE,KAAK,CACd,UAAU,KAAK,CACf,YAAY,GAAG,CACf,WAAW,CAAE,SAAS,CAAC,UAAU;GACpC,CAAC"
}