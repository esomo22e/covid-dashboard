{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "Datepicker.svelte",
    "Month.svelte",
    "NavBar.svelte",
    "Popover.svelte",
    "Week.svelte",
    "SvelteTable.svelte",
    "App.svelte",
    "BriefHomepage.svelte",
    "DonutChart1.svelte",
    "DonutChart2.svelte",
    "DonutChart_pos.svelte",
    "DonutChart_pos2.svelte",
    "DonutChart_pos3.svelte",
    "DonutChart_total.svelte",
    "StackedColumnChart.svelte",
    "StackedColumnChart2.svelte",
    "WaffleChart.svelte",
    "WellnessSummary.svelte",
    "GraphicFooter.svelte",
    "GraphicTitle.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Month from './Month.svelte';\n  import NavBar from './NavBar.svelte';\n  import Popover from './Popover.svelte';\n  import { getMonths } from './lib/helpers';\n  import { formatDate, internationalize } from 'timeUtils';\n  import { keyCodes, keyCodesArray } from './lib/keyCodes';\n  import { onMount, createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n  const today = new Date();\n  const oneYear = 1000 * 60 * 60 * 24 * 365;\n\n  let popover;\n\n  export let format = '#{m}/#{d}/#{Y}';\n  export let start = new Date(Date.now() - oneYear);\n  export let end = new Date(Date.now() + oneYear);\n  export let selected = today;\n  export let dateChosen = false;\n  export let trigger = null;\n  export let selectableCallback = null;\n  export let weekStart = 0;\n  export let daysOfWeek = [\n    ['Sunday', 'Sun'],\n    ['Monday', 'Mon'],\n    ['Tuesday', 'Tue'],\n    ['Wednesday', 'Wed'],\n    ['Thursday', 'Thu'],\n    ['Friday', 'Fri'],\n    ['Saturday', 'Sat']\n  ];\n  export let monthsOfYear = [\n    ['January', 'Jan'],\n    ['February', 'Feb'],\n    ['March', 'Mar'],\n    ['April', 'Apr'],\n    ['May', 'May'],\n    ['June', 'Jun'],\n    ['July', 'Jul'],\n    ['August', 'Aug'],\n    ['September', 'Sep'],\n    ['October', 'Oct'],\n    ['November', 'Nov'],\n    ['December', 'Dec']\n  ];\n\n  selected = (\n    selected.getTime() < start.getTime()\n    || selected.getTime() > end.getTime()\n  ) ? start : selected;\n\n  export let style = '';\n\n  // theming variables:\n  export let buttonBackgroundColor = '#fff';\n  export let buttonBorderColor = '#eee';\n  export let buttonTextColor = '#333';\n  export let highlightColor = '#f7901e';\n  export let dayBackgroundColor = 'none';\n  export let dayTextColor = '#4a4a4a';\n  export let dayHighlightedBackgroundColor = '#efefef';\n  export let dayHighlightedTextColor = '#4a4a4a';\n\n  internationalize({ daysOfWeek, monthsOfYear });\n  let sortedDaysOfWeek = weekStart === 0 ? daysOfWeek : (() => {\n    let dow = daysOfWeek.slice();\n    dow.push(dow.shift());\n    return dow;\n  })();\n\n  let highlighted = today;\n  let shouldShakeDate = false;\n  let shakeHighlightTimeout;\n  let month = today.getMonth();\n  let year = today.getFullYear();\n\n  let isOpen = false;\n  let isClosing = false;\n\n  today.setHours(0, 0, 0, 0);\n\n  function assignmentHandler(formatted) {\n    if (!trigger) return;\n    trigger.innerHTML = formatted;\n  }\n\n  $: months = getMonths(start, end, selectableCallback, weekStart);\n\n  let monthIndex = 0;\n  $: {\n    monthIndex = 0;\n    for (let i = 0; i < months.length; i += 1) {\n      if (months[i].month === month && months[i].year === year) {\n        monthIndex = i;\n      }\n    }\n  }\n  $: visibleMonth = months[monthIndex];\n\n  $: visibleMonthId = year + month / 100;\n  $: lastVisibleDate = visibleMonth.weeks[visibleMonth.weeks.length - 1].days[6].date;\n  $: firstVisibleDate = visibleMonth.weeks[0].days[0].date;\n  $: canIncrementMonth = monthIndex < months.length - 1;\n  $: canDecrementMonth = monthIndex > 0;\n  $: wrapperStyle = `\n    --button-background-color: ${buttonBackgroundColor};\n    --button-border-color: ${buttonBorderColor};\n    --button-text-color: ${buttonTextColor};\n    --highlight-color: ${highlightColor};\n    --day-background-color: ${dayBackgroundColor};\n    --day-text-color: ${dayTextColor};\n    --day-highlighted-background-color: ${dayHighlightedBackgroundColor};\n    --day-highlighted-text-color: ${dayHighlightedTextColor};\n    ${style}\n  `;\n\n  export let formattedSelected;\n  $: {\n    formattedSelected = typeof format === 'function'\n      ? format(selected)\n      : formatDate(selected, format);\n  }\n\n  onMount(() => {\n    month = selected.getMonth();\n    year = selected.getFullYear();\n  });\n\n  function changeMonth(selectedMonth) {\n    month = selectedMonth;\n    highlighted = new Date(year, month, 1);\n  }\n\n  function incrementMonth(direction, day = 1) {\n    if (direction === 1 && !canIncrementMonth) return;\n    if (direction === -1 && !canDecrementMonth) return;\n    let current = new Date(year, month, 1);\n    current.setMonth(current.getMonth() + direction);\n    month = current.getMonth();\n    year = current.getFullYear();\n    highlighted = new Date(year, month, day);\n  }\n\n  function getDefaultHighlighted() {\n    return new Date(selected);\n  }\n\n  const getDay = (m, d, y) => {\n    let theMonth = months.find(aMonth => aMonth.month === m && aMonth.year === y);\n    if (!theMonth) return null;\n    // eslint-disable-next-line\n    for (let i = 0; i < theMonth.weeks.length; ++i) {\n      // eslint-disable-next-line\n      for (let j = 0; j < theMonth.weeks[i].days.length; ++j) {\n        let aDay = theMonth.weeks[i].days[j];\n        if (aDay.month === m && aDay.day === d && aDay.year === y) return aDay;\n      }\n    }\n    return null;\n  };\n\n  function incrementDayHighlighted(amount) {\n    let proposedDate = new Date(highlighted);\n    proposedDate.setDate(highlighted.getDate() + amount);\n    let correspondingDayObj = getDay(\n      proposedDate.getMonth(),\n      proposedDate.getDate(),\n      proposedDate.getFullYear()\n    );\n    if (!correspondingDayObj || !correspondingDayObj.isInRange) return;\n    highlighted = proposedDate;\n    if (amount > 0 && highlighted > lastVisibleDate) {\n      incrementMonth(1, highlighted.getDate());\n    }\n    if (amount < 0 && highlighted < firstVisibleDate) {\n      incrementMonth(-1, highlighted.getDate());\n    }\n  }\n\n  function checkIfVisibleDateIsSelectable(date) {\n    const proposedDay = getDay(date.getMonth(), date.getDate(), date.getFullYear());\n    return proposedDay && proposedDay.selectable;\n  }\n\n  function shakeDate(date) {\n    clearTimeout(shakeHighlightTimeout);\n    shouldShakeDate = date;\n    shakeHighlightTimeout = setTimeout(() => {\n      shouldShakeDate = false;\n    }, 700);\n  }\n\n  function assignValueToTrigger(formatted) {\n    assignmentHandler(formatted);\n  }\n\n  function registerSelection(chosen) {\n    if (!checkIfVisibleDateIsSelectable(chosen)) return shakeDate(chosen);\n    // eslint-disable-next-line\n    close();\n    selected = chosen;\n    dateChosen = true;\n    assignValueToTrigger(formattedSelected);\n    return dispatch('dateSelected', { date: chosen });\n  }\n\n  function handleKeyPress(evt) {\n    if (keyCodesArray.indexOf(evt.keyCode) === -1) return;\n    evt.preventDefault();\n    switch (evt.keyCode) {\n      case keyCodes.left:\n        incrementDayHighlighted(-1);\n        break;\n      case keyCodes.up:\n        incrementDayHighlighted(-7);\n        break;\n      case keyCodes.right:\n        incrementDayHighlighted(1);\n        break;\n      case keyCodes.down:\n        incrementDayHighlighted(7);\n        break;\n      case keyCodes.pgup:\n        incrementMonth(-1);\n        break;\n      case keyCodes.pgdown:\n        incrementMonth(1);\n        break;\n      case keyCodes.escape:\n        // eslint-disable-next-line\n        close();\n        break;\n      case keyCodes.enter:\n        registerSelection(highlighted);\n        break;\n      default:\n        break;\n    }\n  }\n\n  function registerClose() {\n    document.removeEventListener('keydown', handleKeyPress);\n    dispatch('close');\n  }\n\n  function close() {\n    popover.close();\n    registerClose();\n  }\n\n  function registerOpen() {\n    highlighted = getDefaultHighlighted();\n    month = selected.getMonth();\n    year = selected.getFullYear();\n    document.addEventListener('keydown', handleKeyPress);\n    dispatch('open');\n  }\n</script>\n\n<div\n  class=\"datepicker\"\n  class:open=\"{isOpen}\"\n  class:closing=\"{isClosing}\"\n  style={wrapperStyle}\n>\n  <Popover\n    bind:this=\"{popover}\"\n    bind:open=\"{isOpen}\"\n    bind:shrink=\"{isClosing}\"\n    {trigger}\n    on:opened=\"{registerOpen}\"\n    on:closed=\"{registerClose}\"\n  >\n    <div slot=\"trigger\">\n      <slot {selected} {formattedSelected}>\n        {#if !trigger}\n        <button class=\"calendar-button\" type=\"button\">\n          {formattedSelected}\n        </button>\n        {/if}\n      </slot>\n    </div>\n    <div slot=\"contents\">\n      <div class=\"calendar\">\n        <NavBar\n          {month}\n          {year}\n          {canIncrementMonth}\n          {canDecrementMonth}\n          {start}\n          {end}\n          {monthsOfYear}\n          on:monthSelected={e => changeMonth(e.detail)}\n          on:incrementMonth={e => incrementMonth(e.detail)}\n        />\n        <div class=\"legend\">\n          {#each sortedDaysOfWeek as day}\n          <span>{day[1]}</span>\n          {/each}\n        </div>\n        <Month\n          {visibleMonth}\n          {selected}\n          {highlighted}\n          {shouldShakeDate}\n          id={visibleMonthId}\n          on:dateSelected={e => registerSelection(e.detail)}\n        />\n      </div>\n    </div>\n  </Popover>\n</div>\n\n<style>\n  .datepicker {\n    display: inline-block;\n    margin: 0 auto;\n    text-align: center;\n    overflow: visible;\n  }\n\n  .calendar-button {\n    padding: 10px 20px;\n    border: 1px solid var(--button-border-color);\n    display: block;\n    text-align: center;\n    width: 300px;\n    text-decoration: none;\n    cursor: pointer;\n    background: var(--button-background-color);\n    color: var(--button-text-color);\n    border-radius: 7px;\n    box-shadow: 0px 0px 3px rgba(0, 0, 0, 0.1);\n  }\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n\n  .calendar {\n    box-sizing: border-box;\n    position: relative;\n    overflow: hidden;\n    user-select: none;\n    width: 100vw;\n    padding: 10px;\n    padding-top: 0;\n  }\n\n  @media (min-width: 480px) {\n    .calendar {\n      height: auto;\n      width: 340px;\n      max-width: 100%;\n    }\n  }\n\n  .legend {\n    color: #4a4a4a;\n    padding: 10px 0;\n    margin-bottom: 5px;\n  }\n\n  .legend span {\n    width: 14.285714%;\n    display: inline-block;\n    text-align: center;\n  }\n</style>\n",
    "<script>\n  import Week from './Week.svelte';\n\n  export let id;\n  export let visibleMonth;\n  export let selected;\n  export let highlighted;\n  export let shouldShakeDate;\n\n  let lastId = id;\n  let direction;\n\n  $: {\n    direction = lastId < id ? 1 : -1;\n    lastId = id;\n  }\n</script>\n\n<div class=\"month-container\">\n  {#each visibleMonth.weeks as week (week.id) }\n    <Week \n      days={week.days} \n      {selected} \n      {highlighted} \n      {shouldShakeDate} \n      {direction}\n      on:dateSelected \n    />\n  {/each}\n</div>\n\n<style>\n  .month-container { \n    width: 100%;\n    display: -ms-grid;\n    display: grid;\n    -ms-grid-columns: 1fr;\n    -ms-grid-rows: 1fr;\n  }\n</style>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let month;\n  export let year;\n  export let start;\n  export let end;\n  export let canIncrementMonth;\n  export let canDecrementMonth;\n  export let monthsOfYear;\n\n  let monthSelectorOpen = false;\n  let availableMonths;\n\n  $: {\n    let isOnLowerBoundary = start.getFullYear() === year;\n    let isOnUpperBoundary = end.getFullYear() === year;\n    availableMonths = monthsOfYear.map((m, i) => {\n      return Object.assign({}, {\n        name: m[0],\n        abbrev: m[1]\n      }, {\n        selectable:\n          (!isOnLowerBoundary && !isOnUpperBoundary)\n          || (\n            (!isOnLowerBoundary || i >= start.getMonth())\n            && (!isOnUpperBoundary || i <= end.getMonth())\n          )\n      });\n    });\n  }\n\n  function toggleMonthSelectorOpen() {\n    monthSelectorOpen = !monthSelectorOpen;\n  }\n\n  function monthSelected(event, { m, i }) {\n    event.stopPropagation();\n    if (!m.selectable) return;\n    dispatch('monthSelected', i);\n    toggleMonthSelectorOpen();\n  }\n</script>\n\n<div class=\"title\">\n  <div class=\"heading-section\">\n    <div class=\"control\" \n      class:enabled={canDecrementMonth}\n      on:click={() => dispatch('incrementMonth', -1)}>\n      <i class=\"arrow left\"></i>\n    </div>\n    <div class=\"label\" on:click={toggleMonthSelectorOpen}>\n      {monthsOfYear[month][0]} {year}\n    </div> \n    <div class=\"control\"\n      class:enabled={canIncrementMonth}\n      on:click={() => dispatch('incrementMonth', 1)}>\n      <i class=\"arrow right\"></i>\n    </div>\n  </div>\n  <div class=\"month-selector\" class:open={monthSelectorOpen}>\n    {#each availableMonths as monthDefinition, index}\n      <div \n        class=\"month-selector--month\" \n        class:selected={index === month}\n        class:selectable={monthDefinition.selectable}\n        on:click={e => monthSelected(e, { m: monthDefinition, i: index })}\n      >\n        <span>{monthDefinition.abbrev}</span>\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .heading-section { \n    font-size: 20px;\n    padding: 24px 15px;\n    display: flex;\n    justify-content: space-between;\n    color: #3d4548;\n    font-weight: bold;\n  }\n  .label { \n    cursor: pointer;\n  }\n  .month-selector { \n    position: absolute;\n    top: 75px; \n    left: 0; \n    right: 0; \n    bottom: 0; \n    background-color: #fff;\n    transition: all 300ms; \n    transform: scale(1.2); \n    opacity: 0; \n    visibility: hidden;\n    z-index: 1;\n    text-align: center;\n  }\n  .month-selector.open { \n    transform: scale(1); \n    visibility: visible;\n    opacity: 1;\n  }\n  .month-selector--month { \n    width: 31.333%; \n    margin: .5%; \n    height: 23%;\n    display: inline-block;\n    color: #4a4a4a;\n    border: 1px solid #efefef;\n    opacity: 0.2;\n  }\n  .month-selector--month.selectable { \n    opacity: 1; \n  }\n  .month-selector--month.selectable:hover { \n    cursor: pointer;\n    box-shadow: 0px 0px 3px rgba(0,0,0,0.15);\n  }\n  .month-selector--month.selected { \n    background: var(--highlight-color);\n    color: #fff;\n  }\n  .month-selector--month:before { \n    content: ' ';\n    display: inline-block;\n    height: 100%;\n    vertical-align: middle;\n  }\n  .month-selector--month span { \n    vertical-align: middle; \n    display: inline-block;\n  }\n\n  .control { \n    padding: 0 8px;\n    opacity: 0.2;\n    transform: translateY(3px);\n  }\n\n  .control.enabled { \n    opacity: 1; \n    cursor: pointer;\n  }\n\n  .arrow {\n    display: inline-block;\n    width: 18px;\n    height: 18px;\n    border-style: solid;\n    border-color: #a9a9a9;\n    border-width: 0;\n    border-bottom-width: 2px;\n    border-right-width: 2px;\n  }\n\n  .arrow.right {\n    transform: rotate(-45deg);\n    -webkit-transform: rotate(-45deg);\n  }\n\n  .arrow.left {\n    transform: rotate(135deg);\n    -webkit-transform: rotate(135deg);\n  }\n\n</style>\n",
    "<script>\n  import { onMount, createEventDispatcher, tick } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  let once = (el, evt, cb) => {\n    function handler() {\n      cb.apply(this, arguments);\n      el.removeEventListener(evt, handler);\n    }\n    el.addEventListener(evt, handler);\n  };\n\n  let popover;\n  let w;\n  let triggerContainer;\n  let contentsAnimated;\n  let contentsWrapper;\n  let translateY = 0;\n  let translateX = 0;\n\n  export let open = false;\n  export let shrink;\n  export let trigger;\n  export const close = () => {\n    shrink = true;\n    once(contentsAnimated, 'animationend', () => {\n      shrink = false;\n      open = false;\n      dispatch('closed');\n    });\n  };\n\n  function checkForFocusLoss(evt) {\n    if (!open) return;\n    let el = evt.target;\n    // eslint-disable-next-line\n    do {\n      if (el === popover) return;\n    // eslint-disable-next-line\n    } while (el = el.parentNode);\n    close();\n  }\n\n  onMount(() => {\n    document.addEventListener('click', checkForFocusLoss);\n    if (!trigger) return;\n    triggerContainer.appendChild(trigger.parentNode.removeChild(trigger));\n\n    // eslint-disable-next-line\n    return () => {\n      document.removeEventListener('click', checkForFocusLoss);\n    };\n  });\n\n  const getDistanceToEdges = async () => {\n    if (!open) { open = true; }\n    await tick();\n    let rect = contentsWrapper.getBoundingClientRect();\n    return {\n      top: rect.top + (-1 * translateY),\n      bottom: window.innerHeight - rect.bottom + translateY,\n      left: rect.left + (-1 * translateX),\n      right: document.body.clientWidth - rect.right + translateX\n    };\n  };\n\n  const getTranslate = async () => {\n    let dist = await getDistanceToEdges();\n    let x; let\n      y;\n    if (w < 480) {\n      y = dist.bottom;\n    } else if (dist.top < 0) {\n      y = Math.abs(dist.top);\n    } else if (dist.bottom < 0) {\n      y = dist.bottom;\n    } else {\n      y = 0;\n    }\n    if (dist.left < 0) {\n      x = Math.abs(dist.left);\n    } else if (dist.right < 0) {\n      x = dist.right;\n    } else {\n      x = 0;\n    }\n    return { x, y };\n  };\n\n  const doOpen = async () => {\n    const { x, y } = await getTranslate();\n\n    translateX = x;\n    translateY = y;\n    open = true;\n\n    dispatch('opened');\n  };\n</script>\n\n<svelte:window bind:innerWidth={w} />\n<div class=\"sc-popover\" bind:this={popover}>\n  <div class=\"trigger\" on:click={doOpen} bind:this={triggerContainer}>\n    <slot name=\"trigger\">\n    </slot>\n  </div>\n  <div \n    class=\"contents-wrapper\" \n    class:visible={open}\n    class:shrink={shrink}\n    style=\"transform: translate(-50%,-50%) translate({translateX}px, {translateY}px)\" \n    bind:this={contentsWrapper}>\n    <div class=\"contents\" bind:this={contentsAnimated}>\n      <div class=\"contents-inner\">\n        <slot name=\"contents\"></slot>\n      </div>\n    </div>\n  </div>\n</div>\n\n<style>\n  .sc-popover { \n    position: relative;\n  }\n\n  .contents-wrapper { \n    transform: translate(-50%, -50%); \n    position: absolute;\n    top: 50%; \n    left: 50%; \n    transition: none;\n    z-index: 2;\n    display: none;\n  }\n\n  .contents { \n    background: #fff;\n    box-shadow: 0px 10px 26px rgba(0,0,0,0.4) ;\n    opacity: .8; \n    padding-top: 0;\n    display: none;\n    animation: grow 200ms forwards cubic-bezier(.92,.09,.18,1.05);\n  }\n\n  .contents-inner { \n    animation: fadeIn 400ms forwards;\n  }\n\n  .contents-wrapper.visible { \n    display: block;\n  }\n\n  .contents-wrapper.visible .contents { \n    opacity: 1; \n    transform: scale(1);\n    display: block;\n  }\n\n  .contents-wrapper.shrink .contents { \n    animation: shrink 150ms forwards cubic-bezier(.92,.09,.18,1.05);\n  }\n\n  @keyframes grow { \n    0% { \n      transform: scale(.9,.1); \n      opacity: 0; \n    }\n    30% { \n      opacity: 1; \n    }\n    100% { \n      transform: scale(1);\n    }\n  }\n\n  @keyframes shrink { \n    0% { \n      transform: scale(1); \n      opacity: 1; \n    }\n    70% { \n      opacity: 1; \n    }\n    100% { \n      opacity: 0; \n      transform: scale(.9,.1);\n    }\n  }\n\n  @keyframes fadeIn { \n    0% { \n      opacity: 0; \n    }\n    50% { \n      opacity: 0;\n    }\n    100% { \n      opacity: 1; \n    }\n  }\n</style>\n",
    "<script>\n  import { areDatesEquivalent } from './lib/helpers';\n  import { fly, fade } from 'svelte/transition';\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let days;\n  export let selected;\n  export let highlighted;\n  export let shouldShakeDate;\n  export let direction;\n</script>\n\n<div \n  class=\"week\" \n  in:fly|local={{ x: direction * 50, duration: 180, delay: 90 }}\n  out:fade|local={{ duration: 180 }}\n>\n  {#each days as day}\n    <div \n      class=\"day\" \n      class:outside-month={!day.partOfMonth}\n      class:is-today={day.isToday}\n      class:is-disabled={!day.selectable}\n    >\n      <button \n        class=\"day--label\" \n        class:selected={areDatesEquivalent(day.date, selected)}\n        class:highlighted={areDatesEquivalent(day.date, highlighted)}\n        class:shake-date={shouldShakeDate && areDatesEquivalent(day.date, shouldShakeDate)}\n        class:disabled={!day.selectable}\n        type=\"button\"\n        on:click={() => dispatch('dateSelected', day.date)}\n      >\n        {day.date.getDate()}\n      </button>\n    </div>\n  {/each}\n</div>\n\n<style>\n  .week { \n    padding: 0;\n    margin: 0;\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    flex-flow: row;\n    -webkit-flex-flow: row;\n    justify-content: space-around;\n    -ms-grid-column: 1;\n    grid-column: 1; \n  }\n  .week:nth-child(6n + 1) { \n    -ms-grid-row: 1; \n    grid-row: 1; \n  }\n  .week:nth-child(6n + 2) { \n    -ms-grid-row: 2; \n    grid-row: 2; \n  }\n  .week:nth-child(6n + 3) { \n    -ms-grid-row: 3; \n    grid-row: 3; \n  }\n  .week:nth-child(6n + 4) { \n    -ms-grid-row: 4; \n    grid-row: 4; \n  }\n  .week:nth-child(6n + 5) { \n    -ms-grid-row: 5; \n    grid-row: 5; \n  }\n  .week:nth-child(6n + 6) { \n    -ms-grid-row: 6; \n    grid-row: 6; \n  }\n  .day { \n    margin: 2px;\n    color: var(--day-text-color);\n    font-weight: bold;\n    text-align: center;\n    font-size: 16px;\n    flex: 1 0 auto;\n    height: auto;\n    display: flex; \n    flex-basis: 0;\n  }\n  .day.outside-month, \n  .day.is-disabled { \n    opacity: 0.35;\n  }\n  .day:before { \n    content: '';\n    float: left;\n    padding-top: 100%;\n  }\n  .day--label { \n    color: var(--day-text-color);\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    width: 100%;\n    position: relative;\n    border: 1px solid #fff;\n    border-radius: 50%; \n    margin: 10%;\n    padding: 0;\n    align-items: center;\n    background: var(--day-background-color);\n    cursor: pointer;\n    transition: all 100ms linear;\n    font-weight: normal;\n  }\n  .day--label.disabled { \n    cursor: default;\n  }\n  @media (min-width: 480px) { \n    .day--label.highlighted,\n    .day--label:not(.disabled):hover { \n      background: var(--day-highlighted-background-color);\n      border-color: var(--day-highlighted-background-color);\n      color: var(--day-highlighted-text-color);\n    }\n  }\n  .day--label.shake-date { \n    animation: shake 0.4s 1 linear;\n  }\n  .day--label.selected:hover,\n  .day--label.selected,\n  .day--label:active:not(.disabled) { \n    background-color: var(--highlight-color);\n    border-color: var(--highlight-color);\n    color: #fff;\n  }\n  .day.is-today .day--label, \n  .day.is-today .day--label:hover { \n    opacity: 1; \n    background: none;\n    border-color: var(--highlight-color);\n    color: #000;\n  }\n\n  @keyframes shake {\n    0% { transform: translate(7px); }\n    20% { transform: translate(-7px); }\n    40% { transform: translate(3px); }\n    60% { transform: translate(-3px); }\n    80% { transform: translate(1px); }\n    100% { transform: translate(0px); }\n  }\n</style>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let columns;\n  export let rows;\n  export let sortBy = \"\";\n  export let sortOrder = 1;\n  export let iconAsc = '▲';\n  export let iconDesc = '▼';\n  export let classNameTable = '';\n  export let classNameThead = '';\n  export let classNameTbody = '';\n  export let classNameSelect = '';\n  export let classNameRow = '';\n  export let classNameCell = '';\n  export let filterSelections = {};\n\n  let sortFunction = () => \"\";\n  let showFilterHeader = columns.some(c => {\n    // check if there are any filter or search headers\n    return c.filterOptions !== undefined || c.searchValue !== undefined\n  });\n  let filterValues = {};\n  let searchValues = {};\n  let columnByKey = {};\n\n  columns.forEach(col => {\n    columnByKey[col.key] = col;\n  });\n\n  $: c_rows = rows\n    .filter(r => {\n      // get search and filter results/matches\n      return Object.keys(filterSelections).every(f => {\n          // check search (text input) matches\n          let resSearch =\n            filterSelections[f] === \"\" ||\n            (columnByKey[f].searchValue &&\n              (columnByKey[f].searchValue(r) + \"\")\n                .toLocaleLowerCase()\n                .indexOf((filterSelections[f] + \"\").toLocaleLowerCase()) >= 0);\n            \n          // check filter (dropdown) matches\n          let resFilter =\n            resSearch ||\n            filterSelections[f] === undefined ||\n            // default to value() if filterValue() not provided in col\n            filterSelections[f] ===\n              (typeof columnByKey[f].filterValue === \"function\"\n                ? columnByKey[f].filterValue(r)\n                : columnByKey[f].value(r));\n          return resFilter;\n        })\n      }\n    )\n    .map(r => (Object.assign({}, r, {$sortOn: sortFunction(r)} ) ) )\n    .sort((a, b) => {\n      if (a.$sortOn > b.$sortOn) return sortOrder;\n      else if (a.$sortOn < b.$sortOn) return -sortOrder;\n      return 0;\n    });\n\n  const asStringArray = (v) => [].concat(v).filter(v => typeof v === 'string' && v !== \"\").join(' ');\n\n  const calculateFilterValues = () => {\n    filterValues = {};\n    columns.forEach(c => {\n      if (typeof c.filterOptions === \"function\") {\n        filterValues[c.key] = c.filterOptions(rows);\n      } else if (Array.isArray(c.filterOptions)) {\n        // if array of strings is provided, use it for name and value\n        filterValues[c.key] = c.filterOptions.map(val => ({name:val, value:val}));\n      }\n    });\n  };\n\n  $: {\n    let col = columnByKey[sortBy];\n    if (col !== undefined && col.sortable === true && typeof col.value === \"function\") {\n      sortFunction = r => col.value(r);\n    }\n  };\n\n  $: {\n    // if filters are enabled, watch rows and columns\n    if (showFilterHeader && columns && rows) {\n      calculateFilterValues();\n    }\n  };\n\n  const updateSortOrder = (colKey) => {\n    if (colKey === sortBy) {\n      sortOrder = sortOrder === 1 ? -1 : 1\n    } else {\n      sortOrder = 1;\n    }\n  }\n\n  const handleClickCol = (event, col) => {\n    updateSortOrder(col.key)\n    sortBy = col.key;\n    dispatch('clickCol', {event, col, key:col.key} );\n  }\n\n  const handleClickRow = (event, row) => {\n    dispatch('clickRow', {event, row} );\n  }\n\n  const handleClickCell = (event, row, key) => {\n    dispatch('clickCell', {event, row, key} );\n  }\n\n</script>\n\n<style>\n  table {\n    width: 100%;\n  }\n  .isSortable {\n    cursor: pointer;\n  }\n\n  tr th select {\n    width: 100%;\n  }\n</style>\n\n<table class={asStringArray(classNameTable)}>\n  <thead class={asStringArray(classNameThead)}>\n    {#if showFilterHeader}\n      <tr>\n        {#each columns as col}\n          <th>\n            {#if col.searchValue !== undefined}\n              <input bind:value={filterSelections[col.key]}>\n            {:else if filterValues[col.key] !== undefined}\n              <select bind:value={filterSelections[col.key]} class={asStringArray(classNameSelect)}>\n                <option value={undefined}></option>\n                {#each filterValues[col.key] as option}\n                  <option value={option.value}>{option.name}</option>\n                {/each}\n              </select>\n            {/if}\n          </th>\n        {/each}\n      </tr>\n    {/if}\n    <slot name=\"header\" sortOrder={sortOrder} sortBy={sortBy}>\n      <tr>\n        {#each columns as col}\n          {#if col.sortable}\n            <th\n              on:click={(e) => handleClickCol(e, col)}\n              class={asStringArray(['isSortable', col.headerClass])}\n            >\n              {col.title}\n              {#if sortBy === col.key}\n                { sortOrder === 1 ? iconAsc : iconDesc}\n              {/if}\n            </th>\n          {:else}\n            <th\n              class={col.headerClass}\n            >\n              {col.title}\n              {#if sortBy === col.key}\n                { sortOrder === 1 ? iconAsc : iconDesc}\n              {/if}\n            </th>\n          {/if}\n        {/each}\n      </tr>\n    </slot>\n  </thead>\n  <tbody class={asStringArray(classNameTbody)}>\n    {#each c_rows as row, n}\n      <slot name=\"row\" row={row} n={n} >\n        <tr on:click={(e)=>{handleClickRow(e, row)}} class={asStringArray(classNameRow)}>\n          {#each columns as col}\n            <td\n              on:click={(e)=>{handleClickCell(e, row, col.key)}}\n              class={asStringArray([col.class, classNameCell])}\n            >\n              {#if col.renderComponent}\n                <svelte:component\n                  this={col.renderComponent.component || col.renderComponent} {...(col.renderComponent.props || {})}\n                  row={row}\n                  col={col}\n                />\n              {:else}\n                {@html col.renderValue ? col.renderValue(row) : col.value(row)}\n              {/if}\n            </td>\n          {/each}\n        </tr>\n      </slot>\n    {/each}\n  </tbody>\n</table>\n",
    "<script>\n    import GraphicTitle from './components/GraphicTitle.svelte'\n    import GraphicFooter from './components/GraphicFooter.svelte'\n    import StackedColumnChart from './charts/StackedColumnChart.svelte'\n    import StackedColumnChart2 from './charts/StackedColumnChart2.svelte'\n    import WellnessSummary from './charts/WellnessSummary.svelte'\n    import DonutChart1 from './charts/DonutChart1.svelte'\n    import DonutChart2 from './charts/DonutChart2.svelte'\n    import DonutChart_Pos from './charts/DonutChart_pos.svelte'\n    import DonutChart_Pos2 from './charts/DonutChart_pos2.svelte'\n    import DonutChart_Pos3 from './charts/DonutChart_pos3.svelte'\n    import DonutChart_total from './charts/DonutChart_total.svelte'\n    import WaffleChart from './charts/WaffleChart.svelte'\n    import SvelteTable from \"svelte-table\"\n    import {csv} from 'd3-fetch'\n    import {timeFormat, timeParse} from 'd3-time-format';\n    import {negativePositive} from './helpers/colors.js'\n    import * as testData from '../public/datasets/testingdata2.json'\n    import Datepicker from 'svelte-calendar';\n\n    /**\n     * Gets a date object for today.\n     *\n     * @since 2.0\n     *\n     * @return Date\n     */\n    function getToday() {\n        return new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate())\n    }\n\n    /**\n     * Gets a date object for a specified number of days ago.\n     *\n     * @since 2.0\n     *\n     * @return Date\n     */\n    function getDaysAgo(daysAgo) {\n        return new Date(getToday() - daysAgo * 24 * 60 * 60 * 1000);\n    }\n\n    /**\n     * Gets a date object for the start of the semester\n     *\n     * @since 2.0\n     *\n     * @return Date\n     */\n    function getSemesterStart() {\n        return new Date(filterEndDate - 7 * 24 * 60 * 60 * 1000);\n    }\n\n    /**\n     * Sets filter dates to past seven days\n     */\n    function setFilterLastSevenDays() {\n        filterStartDate = getDaysAgo(7);\n        filterEndDate = getToday();\n    }\n\n\n    /**\n     * Sets filter dates to past thirty days\n     */\n    function setFilterLastThirtyDays() {\n        filterStartDate = getDaysAgo(30);\n        filterEndDate = getToday();\n    }\n\n    /**\n     * Sets filter dates to past thirty days\n     */\n    function setFilterThisSemester() {\n\n        filterStartDate = new Date(\"2021/09/09\");\n        filterEndDate = new Date(\"2021/12/08\");\n    }\n\n\n    /**\n     * Set up default dates\n     *\n     * @since 2.0\n     */\n    let filterEndDate = getToday();\n    let filterStartDate = getDaysAgo(7);\n    let isStartDateChosen = false;\n    let isEndDateChosen = false;\n\n    /**\n     * Get COVID dataset\n     *\n     * @since 1.0\n     */\n\n    // const url = 'https://spreadsheets.google.com/feeds/cells/1REJNqVcREni8IlxiObIbm5M6xU0lb8BeKfxJO0lNvXk/1/public/full?alt=json&date=' + dateCode\n\n    // the dollar sign is a Svelte-y way of declaring a variable that will be dynamic\n    $: covidData = [];\n\n\n    const parseTime = timeParse(\"%m/%d/%y\");\n    const formatDate = timeFormat(\"%m/%d/%y\");\n\n\ncsv(\"/datasets/covidupdate_testData.csv\").then(function(data,i){\n\t// csv(\"//news.northeastern.edu/interactive/2021/08/updated-covid-dashboard/datasets/covidupdate_testData.csv\").then(function(data,i){\n        // csv(\"//news.northeastern.edu/interactive/2020/08/covid-testing-dashboard-weekly/datasets/testingdata.csv\").then(function(data,i){\n        data.forEach(function (d, i) {\n            Object.keys(d).forEach(function (j) {\n                if ((j === \"Date\") || (j === \"Mass. Positive Rate\")) {\n                    d[j] = d[j]\n                } else {\n                    d[j] = parseFloat(d[j])\n                }\n\n            })\n        });\n\n        covidData = data;\n    });\n\n    /**\n     * Filters test results by date.\n     *\n     * @since 2.0\n     */\n    $: filteredData = covidData.filter(function (d) {\n        const START_DATE = new Date(filterStartDate).getTime();\n        const END_DATE = new Date(filterEndDate).getTime();\n        const COMPARE_DATE = new Date(d.Date).getTime();\n        return (COMPARE_DATE >= START_DATE && COMPARE_DATE <= END_DATE);\n    });\n\n    // NEED THESE TO CYCLE THROUGH THE HEADERS OF THE GOOGLE SHEET\n\n    // Dynamically figure out the width of CSS grid items.\n    let width = document.getElementById('covid-testing-dashboard').getBoundingClientRect().width;\n    let width_donut = Math.min(width, 175);\n    let width_stacked = width;\n    let height = 500;\n    // height = Math.min(height, 500);\n\n    if (window.innerWidth > 600) {\n        width_donut = width * 0.22;\n        width_stacked = (width * 0.5)\n        height = width * 0.6;\n    }\n\n\n    // These are the columns for the table portion; this configuration is passed to the SvelteTable plugin\n    const columns = [\n        {\n            key: \"Date\",\n            title: \"Date\",\n            value: v => new Date(v[\"Date\"]),\n            renderValue: v => v[\"Date\"],\n            sortable: true,\n            headerClass: \"text-left\",\n            class: \"date-col\"\n        },\n        {\n            key: \"Tests Completed\",\n            title: \"Tests Completed\",\n            value: v => v[\"Tests Completed\"],\n            sortable: true,\n            headerClass: \"text-left\"\n        },\n        {\n            key: \"Negative Tests\",\n            title: \"Negative Tests\",\n            value: v => v[\"Negative Tests\"],\n            sortable: true,\n            headerClass: \"text-left\"\n        },\n        {\n            key: \"Negative Rate\",\n            title: \"Negative Rate\",\n            value: v => (\n                (v[\"Negative Tests\"] / v[\"Tests Completed\"]).toLocaleString(undefined, {\n                    style: 'percent',\n                    minimumFractionDigits: 2\n                })\n            ),\n            sortable: true,\n            headerClass: \"text-left\"\n        },\n        {\n            key: \"Positive Tests\",\n            title: \"Positive Tests\",\n            value: v => v[\"Positive Tests\"],\n            sortable: true,\n            headerClass: \"text-left\"\n        },\n        {\n            key: \"Positive Rate\",\n            title: \"Positive Rate\",\n            value: v => (\n                (v[\"Positive Tests\"] / v[\"Tests Completed\"]).toLocaleString(undefined, {\n                    style: 'percent',\n                    minimumFractionDigits: 2\n                })\n            ),\n            sortable: true,\n            headerClass: \"text-left\"\n        }\n    ]\n\n\t// var tableHeight = document.getElementById('table-covid').style.height;\n  // function changeHeight(){\n\t//   document.getElementById('table-covid').style.height = \"500px\";\n\t//   console.log(\"click me\");\n  // }\n  // function buttonClick() {\n\t//   // alert('clicked')\n\t//   console.log(\"click me\");\n\t//   // document.getElementById('table-covid').style.height = \"500px\";\n\t//   var tableHeight = document.getElementById('table-covid').style.height;\n\t//   tableHeight = \"200px\";\n  //\n\t//   if(document.getElementById('table-covid').style.height === \"200px\"){\n\t// \t  document.getElementById('table-covid').style.height = \"auto\";\n  //\n\t//   }\n\t//   else{\n\t// \t  document.getElementById('table-covid').style.height = \"200px\";\n  //\n\t//   }\n  // }\n\n  function insertAfter(referenceNode, newNode) {\n  referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n}\nvar el = document.createElement(\"span\");\n\n\n    let hasBeenClicked = false;\n\n\tfunction buttonClick() {\n           if (hasBeenClicked) return;\n\n           hasBeenClicked = true;\n           setTimeout(() => {\n               hasBeenClicked = false;\n           }, 200);\n\n           console.log('click');\n\n\n\t\t   var divTable= document.getElementById('table-covid');\n\t\t   var divName = document.getElementById(\"table-name\");\n\n\t\t   var divSpan = document.getElementById(\"table-grad\");\n\n\t\t   // var el = document.createElement(\"span\");\n\n\t\t   // let tableHeight = document.getElementById('table-covid').style.height;\n\t\t     if( divTable.style.height == \"auto\"){\n\t   \t\t  divTable.style.height = \"200px\";\n\n\t\t\t  divName.innerText = \"View Full Table\";\n\n\n\t\t\t  // var divSpan = document.getElementById(\"table-grad\");\n\t\t\t  divSpan.style.height = \"100px\";\n\n\n\n\t   \t  }\n\t   \t  else{\n\n\t   \t\t  divTable.style.height = \"auto\";\n\n\t\t\t  divName.innerText = \"View Truncated Table\";\n\n\n\t\t\t  divSpan.style.height = \"100px\";\n\n\n\t\t\t  // divSpan.style.height = \"200px\";\n\t\t\t  // divSpan.style.background = \"linear-gradient(top, #e0e0e0, #020024)\";\n\t   \t  }\n\t}\n\n</script>\n\n<style>\n\n    .dash-test {\n        grid-area: dash-test;\n    }\n\n    .dash-positive {\n        grid-area: dash-positive;\n    }\n\n    /* .dash-donut { grid-area: dash-donut; } */\n    .dash-variants {\n        grid-area: dash-variants;\n    }\n\n    .dash-vac-rate {\n        grid-area: dash-vac-rate;\n    }\n\n    .dash-wellness {\n        grid-area: dash-wellness;\n    }\n\n    .dash-table {\n        grid-area: dash-table;\n    }\n\n    #dashboard-grid {\n        display: grid;\n        grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;\n        grid-template-rows: 1fr auto;\n        gap: 0 60px;\n        grid-template-areas:\n\t\t  \"dash-test\"\n\t\t  \"dash-positive\"\n\t\t  \"dash-variants\"\n\t\t  \"dash-vac-rate\"\n\t\t  \"dash-wellness\"\n\t\t \"dash-table\";\n        /* margin-bottom:15px; */\n    }\n\n    .dashboard-grid-item {\n        margin-bottom: 2rem;\n    }\n\n    .dash-test {\n        display: grid;\n        grid-auto-rows: 1fr;\n        grid-template-columns: 1.2fr 0.8fr;\n        grid-template-rows: 1fr;\n        gap: 0px 40px;\n        grid-template-areas:\n\t\t  \"dash-stats dash-bars\";\n        grid-area: dash-test;\n\n\n    }\n\n    #dash-test-item {\n        width: 100%;\n\n    }\n\n    .dash-stats {\n        display: grid;\n        grid-template-columns: 1fr;\n        grid-template-rows: 1fr 1fr 1fr;\n        gap: 10px 0px;\n        grid-template-areas:\n\t  \".\"\n\t  \".\"\n\t  \".\";\n    }\n\n    #dash-stats-item {\n        padding: 10px;\n    }\n\n    .donut-item {\n        display: flex;\n        background-color: #e0ecf4;\n        /* padding: 10px; */\n        /* display: grid;\n        grid-template-columns: 0.2fr 1.8fr;\n        grid-template-rows: 1fr;\n        gap: 0px 0px;\n        grid-template-areas:\n          \". .\"; */\n        /* grid-area: dash-test;  */\n    }\n\n    .dash-brief {\n        color: #f7fcfd;\n        background-color: #6e016b;\n        /* padding: 10px */\n        /* padding: 20px; */\n    }\n\n    .covid-links {\n        display: flex;\n    }\n\n    .covid-links a {\n        font-weight: 600;\n        color: #f7fcfd;\n        margin: 0 10px;\n    }\n\n    /* Dashboard Positive since 9/1 */\n    .dash-pos-donuts {\n\n\n        display: grid;\n        grid-template-columns: 1fr 1fr 1fr;\n        grid-template-rows: 1fr;\n        gap: 0px 40px;\n        grid-template-areas:\n\t\t\". . .\";\n        /* justify-items: center;\n          align-items: center; */\n        /* margin: 0 auto; */\n        /* width: 50%;\n        margin: 0 auto; */\n    }\n\n    .donut-positive-item {\n        display: flex;\n        /* justify-content: center; */\n        /* align-items: center; */\n    }\n\n    .dash-vac-chart {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        grid-template-rows: 1fr;\n        gap: 0px 40px;\n    }\n\n    span#cell {\n        height: 30px;\n        width: 30px;\n        border-radius: 50%;\n        display: block;\n        margin: 0 auto;\n        /* justify-content: center;\n          align-items: center; */\n    }\n\n    span.dot-1 {\n        background-color: #bfd3e6;\n\n\n    }\n\n    span.dot-2 {\n        background: #8c96c6;\n\n    }\n\n    span.dot-3 {\n        background: #6e016b;\n\n    }\n\n    .cell-label-var {\n        text-anchor: middle;\n        font-size: 0.65rem;\n        color: #777;\n        text-transform: uppercase;\n        padding: 10px 0;\n        text-align: center;\n        font-family: \"akkurat\", -apple-system, sans-serif;\n        /* opacity: 50%; */\n\n    }\n\n    h3.vac-title {\n        margin: 0 20px\n    }\n\n    .stacked-cont {\n        margin: 2em 0;\n    }\n\n.dash-table{\n\theight: 200px;\n\toverflow: hidden;\n\t/* background: linear-gradient(to bottom, #333 0%, transparent 100%); */\n\n}\n/* .dash-table:before {\n\tdisplay: block!important;\n\t  content: \"\";\n\n} */\n\n.dash-table::after {\n\theight: 200px;\n\tdisplay: block;\n\n\t  content: \"\";\n\t  width:100%;\n      height:30px;\n      background: linear-gradient(top, #e0e0e0, #020024);\n      background: -webkit-linear-gradient(top,  #e0e0e0, #020024);\n      background: -moz-linear-gradient(top,  #e0e0e0, #020024);\n}\n\nspan#table-grad{\n\theight: 50px;\n\tdisplay: block;\n\n\t/* content: \"\";\n\twidth:100%;\n\theight:30px;\n\tbackground: linear-gradient(top, #e0e0e0, #020024);\n\tbackground: -webkit-linear-gradient(top,  #e0e0e0, #020024);\n\tbackground: -moz-linear-gradient(top,  #e0e0e0, #020024); */\n\n}\n.table-button{\n\tmargin: 0 auto;\n    display: block;\n\n\tpadding: 20px;\n  text-align: center;\n  text-decoration: none;\n\tbackground-color: #6e016b;\n\tcolor: #f7fcfd;\n\tfont-size:16px;\n\tborder-radius: 12px;\n}\n\n    @media screen and (max-width: 600px) {\n        #dashboard-grid {\n            grid-template-columns: 1fr;\n            grid-template-rows: 1fr;\n            gap: 40px 60px;\n            grid-template-areas:\n  \t\t\t  \"dash-test\"\n  \t\t\t  \"dash-positive\"\n  \t\t\t  \"dash-variants\"\n  \t\t\t  \"dash-vac-rate\"\n  \t\t\t  \"dash-wellness\"\n  \t\t\t \"dash-table\";\n            /* margin-bottom:15px; */\n        }\n\n        .dashboard-grid-item {\n            margin-bottom: 1rem;\n            width: 100vw;\n        }\n\n\t\t/* .dash-table {\n            overflow: scroll;\n\t\t} */\n\n        .dash-stats {\n            display: grid;\n            grid-template-columns: 1fr;\n            grid-template-rows: 1fr;\n            gap: 10px 0px;\n            grid-template-areas:\n\t\t  \".\"\n\t\t  \".\"\n\t\t  \".\";\n        }\n\n        .donut-item {\n            flex-flow: wrap-reverse;\n        }\n\n        #dash-test-item {\n            width: 100vw;\n            margin: 1rem 0;\n\n        }\n\n        .dash-test {\n            display: grid;\n            grid-auto-rows: 1fr;\n            grid-template-columns: 1fr;\n            grid-template-rows: 1fr 0.65fr;\n            gap: 0px 40px;\n            grid-template-areas:\n\t\t\t  \"dash-stats\"\n\t\t\t   \"dash-bars\";\n            grid-area: dash-test;\n\n\n        }\n\n        .donut-chart {\n            margin: 1em auto;\n        }\n\n        .dash-positive {\n            width: 100vw;\n        }\n\n        .dash-pos-donuts {\n\n\n            display: grid;\n            grid-template-columns: 0.5fr 0.5fr;\n            grid-template-rows: 0.5fr 0.5fr;\n            grid-template-areas:\n\t\t\t\". .\"\n\t\t\t\". .\";\n\n            /* gap: 0px 40px; */\n            /* grid-template-areas:\n              \".\"\n              \".\"\n              \".\"; */\n            /* justify-items: center;\n              align-items: center; */\n            /* margin: 0 auto; */\n            /* width: 50%;\n            margin: 0 auto; */\n        }\n\n        span#cell {\n            height: 20px;\n            width: 20px;\n        }\n\n        .dash-vac-chart {\n            display: grid;\n            grid-template-columns: 1fr;\n            grid-template-rows: 1fr;\n            gap: 0px 40px;\n        }\n\n\n        .dash-stacked-vaccination {\n            width: 90%;\n            margin: 0 auto;\n        }\n    }\n\n    .filter-bar-date-range {\n        display: flex;\n        align-items: center;\n    }\n\n    .filter-bar-date-range > * {\n        padding: 1rem;\n    }\n\n    .datepicker {\n        width: 12ch;\n    }\n\n    /**\n     * Buttons\n     */\n    button {\n        position: relative;\n        place-self: flex-end;\n        text-transform: uppercase;\n        background-color: var(--global--color-red, red);\n        transition: all 0.2s;\n        display: inline-flex;\n        align-items: center;\n        border: 0;\n        color: var(--global--color-white, white);\n        font-family: var(--global--font-signage);\n        padding: 7px 10px 5px;\n        text-decoration: none;\n        font-weight: var(--button--base-weight, bold);\n        font-size: var(--button--base-font-size, large);\n        margin: calc(0.25 * var(--global--spacing-unit, 1rem));\n        cursor: pointer;\n    }\n\n    /**\n     * Datepicker\n     */\n\n    .datepicker-label {\n        border: var(--global--border-light-weight, 1px) solid var(--global--border-light-color, gray);\n        cursor: pointer;\n    }\n\n</style>\n\n{#if covidData.length > 0}\n    <div id=\"dashboard-grid\">\n\n        <!-- Dash Test Information - hospitalization, 7 day testing, and stacked bar chart -->\n        <div class=\"dashboard-grid-item dash-test\">\n\n            <!-- Dashboard Donut Chart For the week and Get Tested (so stats of covid)-->\n            <div class=\"dash-stats\" id=\"dash-test-item\">\n                <div class=\"donut-item\" id=\"dash-stats-item\">\n\n                    <div class=\"donut-chart\">\n                        <DonutChart1\n                                width={width_donut}\n                                height={width_donut}\n                                data={covidData}\n                                xVar={\"Date\"}\n                                yVar={\"Samples Taken\"}\n                                yA={\"Tests Completed\"}\n                                yB={\"Tests in Progress\"}\n                        />\n                    </div>\n\n                    <div class=\"donut-content\">\n                        <h3>Hospitalizations</h3>\n                        <p class=\"update-line\"><i>Suspendisse egestas est metus,\n                            sit amet ultricies magna blandit vitae. Nam quis leo\n                            at arcu ultricies bibendum. Curabitur fringilla arcu\n                            ligula, ac suscipit purus scelerisque nec. Proin\n                            lacinia efficitur consequat.</i></p>\n                    </div>\n                </div>\n\n\n                <div class=\"donut-item\" id=\"dash-stats-item\">\n\n                    <div class=\"donut-chart\">\n\n                        <DonutChart2\n                                width={width_donut}\n                                height={width_donut}\n                                data={covidData}\n                                xVar={\"Date\"}\n                                yVar={\"Samples Taken\"}\n                                yA={\"Tests Completed\"}\n                                yB={\"Tests in Progress\"}\n                        />\n\n                    </div>\n                    <div class=\"donut-content\" id=\"dash-stats-item\">\n                        <h3>Seven-Day Positive Test</h3>\n                        <p class=\"update-line\"><i>Suspendisse egestas est metus,\n                            sit amet ultricies magna blandit vitae. Nam quis leo\n                            at arcu ultricies bibendum. Curabitur fringilla arcu\n                            ligula, ac suscipit purus scelerisque nec. Proin\n                            lacinia efficitur consequat.</i></p>\n                    </div>\n                </div>\n\n                <div class=\"dash-brief\" id=\"dash-stats-item\">\n\n\t\t\t\t<h3>Wellness Beds in Use</h3>\n\n                    <p class=\"update-line-brief\"><i>Suspendisse egestas est\n                        metus, sit amet ultricies magna blandit vitae. Nam quis\n                        leo at arcu ultricies bibendum. Curabitur fringilla arcu\n                        ligula, ac suscipit purus scelerisque nec. Proin lacinia\n                        efficitur consequat.</i></p>\n                    <div class=\"covid-links\">\n                        <p class=\"schedule-test\"><a\n                                href=\"https://northeastern.sharepoint.com/sites/covidscheduler/SitePages/Home.aspx?wa=wsignin1.0\">Schedule\n                            a Test</a></p>\n                        <p class=\"wellness-check\"><a\n                                href=\"https://neuidmsso.neu.edu/idp/profile/SAML2/Redirect/SSO?execution=e3s1\">Daily\n                            Wellness Check</a></p>\n                    </div>\n                </div>\n            </div>\n\n\n            <!-- Dashboard Stacked Bar Chart -->\n            <div class=\"chart-wrapper\" id=\"chart-results-pos-neg\">\n                <div class=\"dash-bars\" id=\"dash-test-item\">\n                    <GraphicTitle\n                            title={\"Test Results by Date\"}\n                    />\n                    <div class=\"filter-bar\">\n                        <div class=\"filter-bar-presets\">\n                            <button on:click={setFilterLastSevenDays}>7 Days\n                            </button>\n                            <button on:click={setFilterLastThirtyDays}>30 Days\n                            </button>\n                            <button on:click={setFilterThisSemester}>Semester\n                            </button>\n                        </div>\n                        <div class=\"filter-bar-date-range\">\n                            <Datepicker bind:selected={filterStartDate}\n                                        bind:dateChosen={isStartDateChosen}\n                                        end={filterEndDate}>\n                                <div class=\"datepicker-label\">{filterStartDate.toLocaleDateString()}</div>\n                            </Datepicker>\n                            <span class=\"date-separator\"\n                                  aria-label=\"to\">—</span>\n                            <Datepicker bind:selected={filterEndDate}\n                                        bind:dateChosen={isEndDateChosen}\n                                        start={filterStartDate}>\n                                <div class=\"datepicker-label\">{filterStartDate.toLocaleDateString()}</div>\n                            </Datepicker>\n                        </div>\n                    </div>\n                    <div class=\"chart-results-pos-neg__chart\">\n                        <div class=\"dashboard-legend\">\n                            <div class=\"legendCells\">\n                                <div class=\"cell1\"></div>\n                                <div class=\"cell-label\">NEGATIVE TESTS</div>\n\n                            </div>\n                            <div class=\"legendCells\">\n                                <div class=\"cell2\"></div>\n                                <div class=\"cell-label\">POSITIVE TESTS</div>\n\n                            </div>\n\n                        </div>\n                        {#key filteredData}\n                            <StackedColumnChart\n                                    width={width_stacked}\n                                    height={height}\n                                    data={filteredData}\n                                    xVar={'Date'}\n                                    yVar={\"Seven-Day Tests\"}\n                                    yGroups={[\"Seven-Day Negative\", \"Seven-Day Positive\"]}\n                                    colorscheme={negativePositive}\n                            />\n                        {/key}\n                    </div> <!-- /.chart-results-pos-neg__chart -->\n                </div>\n            </div> <!-- /.chart-results-pos-neg -->\n\n\n        </div>\n\n\n        <!-- Dash Positive (Students, Faculty/Staff, and Contractor) -->\n        <div class=\"dashboard-grid-item dash-positive\">\n\n            <GraphicTitle\n                    title={\"Total Positive Since 9/1\"}\n            />\n            <div class=\"dash-pos-donuts\">\n                <div class=\"donut-positive-item\">\n\n                    <div class=\"donut-chart\">\n\n                        <DonutChart_Pos\n                                width={width_donut}\n                                height={width_donut}\n                                data={covidData}\n                                yA={\"Students Total Positive\"}\n                                yB={\"Students Total Negative\"}\n                        />\n                    </div>\n                </div>\n\n                <div class=\"donut-positive-item\">\n                    <div class=\"donut-chart\">\n                        <DonutChart_Pos2\n                                width={width_donut}\n                                height={width_donut}\n                                data={covidData}\n                                yA={\"Tests Completed\"}\n                                yB={\"Tests in Progress\"}\n                        />\n                    </div>\n                </div>\n\n                <div class=\"donut-positive-item\">\n                    <div class=\"donut-chart\">\n\n                        <DonutChart_Pos3\n                                width={width_donut}\n                                height={width_donut}\n                                data={covidData}\n                                yA={\"Tests Completed\"}\n                                yB={\"Tests in Progress\"}\n                        />\n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n\n        <!-- Waffle Charts of Variants -->\n        <div class=\"dashboard-grid-item dash-variants\">\n\n            <GraphicTitle\n                    title={\"Variants\"}\n            />\n            <WaffleChart\n                    data={covidData[covidData.length-1]}\n                    width={width}\n                    columns={25}\n                    groups={[\"SARS-COV-2\", \"SARS-COV-2 Alpha\",\"SARS-COV-2 Delta\"]}\n            />\n\n\n            <div class=\"dashboard-legend\">\n                <div class=\"legendCells\">\n                    <span id=\"cell\" class=\"dot-1\"></span>\n                    <div class=\"cell-label-var\">SARS-CoV-2</div>\n\n                </div>\n                <div class=\"legendCells\">\n                    <span id=\"cell\" class=\"dot-2\"></span>\n                    <div class=\"cell-label-var\">SARS-CoV-2 Alpha</div>\n\n                </div>\n                <div class=\"legendCells\">\n                    <span id=\"cell\" class=\"dot-3\"></span>\n                    <div class=\"cell-label-var\">SARS-CoV-2 Delta</div>\n\n                </div>\n            </div>\n        </div>\n\n\n        <!-- Total Vaccination Rates -->\n\n        <div class=\"dashboard-grid-item dash-vac-rate\">\n\n            <GraphicTitle\n                    title={\"Total Vaccination Rate\"}\n            />\n            <div class=\"dash-vac-chart\">\n                <div class=\"donut-chart\">\n\n                    <DonutChart_total\n                            width={width_donut * 2.25}\n                            height={width_donut * 2.25}\n                            data={covidData}\n                            xVar={\"Date\"}\n                            yVar={\"Samples Taken\"}\n                            yA={\"Tests Completed\"}\n                            yB={\"Tests in Progress\"}\n                    />\n                </div>\n\n                <div class=\"dash-stacked-vaccination\">\n\n                    <div class=\"stacked-cont\">\n\n                        <h3 class=\"vac-title\">Student Vaccination Rate</h3>\n\n\n                        <StackedColumnChart2\n\n                                width={width_stacked}\n                                height={150}\n                                data={testData.default}\n                                xVar={'Date'}\n                                yVar={\"Total Student Vaccinate\"}\n                                yGroups={[ \"Total Student Vaccinated\", \"Student Vaccinated\"]}\n                                colorscheme={negativePositive}\n                        />\n                    </div>\n\n                    <div class=\"stacked-cont\">\n\n                        <h3 class=\"vac-title\">Faculty/Staff Vaccination\n                            Rate</h3>\n\n                        <StackedColumnChart2\n\n                                width={width_stacked}\n                                height={150}\n                                data={testData.default}\n                                xVar={'Date'}\n                                yVar={\"Total FacStaff Vaccinated\"}\n                                yGroups={[ \"Total FacStaff Vaccinated\", \"FacStaff Vaccinated\"]}\n                                colorscheme={negativePositive}\n                        />\n                    </div>\n\n                    <div class=\"stacked-cont\">\n\n                        <h3 class=\"vac-title\">Student Vaccination Rate</h3>\n\n                        <StackedColumnChart2\n\n                                width={width_stacked}\n                                height={150}\n                                data={testData.default}\n                                xVar={'Date'}\n                                yVar={\"Total Contractor Vaccinated\"}\n                                yGroups={[\"Total Contractor Vaccinated\", \"Contractor Vaccinated\"]}\n                                colorscheme={negativePositive}\n                        />\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n\n        <!-- Dashboard Item -Wellness Summary -->\n\n        <div class=\"dashboard-grid-item dash-wellness\">\n            <!-- <GraphicTitle\n                title={\"Wellness and Contact Tracing\"}\n            /> -->\n            <WellnessSummary\n                    data={covidData}\n            />\n        </div>\n\n        <!-- Dashboard Item -Svelte Table -->\n\t\t<div class=\"dashboard-grid-item dash-table-cont\">\n\n\t\t<div class=\"dashboard-grid-item dash-table\" id=\"table-covid\">\n\t\t<!-- <before></before> -->\n\n            <SvelteTable\n                    columns={columns}\n                    rows={covidData}\n                    sortBy={\"Date\"}\n                    sortOrder={-1}\n                    classNameCell={\"infocell\"}\n            >\n            </SvelteTable>\n\t\t<!-- <after></after> -->\n\t\t<span id = \"table-grad\"></span>\n\t\t</div>\n\t\t<button on:click={buttonClick} class = \"table-button\">\n\t\t<div id = \"table-name\">View Full Table</div>\n\t\t</button>\n        </div>\n\n\n    </div>\n\n\n{/if}\n<GraphicFooter\n        source={\"Northeastern Life Sciences Testing Center and the Broad Institute\"}\n        note={\"\"}\n/>\n",
    "<script>\n\timport { onMount } from 'svelte';\n\n\tlet el;\n\n\texport let data = {data};\n\tdata = data[data.length-1]; // only get the latest day's info\n</script>\n\n<style>\n\t#homepagebrief {\n\t\ttext-align:center;\n\t\tcolor:white;\n\t}\n\n\t#homepagebrief .brief-grid-item {\n\t\tdisplay:block;\n\t\tmargin:0 auto 2rem;\n\t}\n\n\t#homepagebrief h3 {\n\t\tfont-size:1rem;\n\t\tmargin:0 auto;\n\t}\n\n\t#homepagebrief span.brief-stat {\n\t\tfont-size:2rem;\n\t\tfont-weight:bold;\n\t}\n\n\n\n\t/* @media screen and (max-width:600px) {\n\t\t#brief {\n\t\t\tgrid-template-columns: 1fr 1fr;\n\t\t\tgrid-template-rows: 1fr 1fr;\n\t\t\tgap: 10px 10px;\n\t\t\tgrid-template-areas: \". .\" \". .\";\n\t\t}\n\n\t\t#breakdown {\n\t\t\tmargin-top:2.3rem\n\t\t}\n\n\t\th3.posheader {\n\t\t\t/* position:relative;\n\t\t\tleft:50%;\n\t\t}\n\t}*/\n</style>\n\n<div bind:this={el} class=\"homepagebrief\" id=\"homepagebrief\">\n\t<div class=\"brief-grid-item\">\n\t\t<h3>Tests Completed</h3>\n\t\t<span class=\"brief-stat\">{(data[\"Total Tests\"]).toLocaleString('en-US')}</span>\n\t</div>\n\t<div class=\"brief-grid-item\">\n\t\t<h3>Negative Tests</h3>\n\t\t<span class=\"brief-stat\">{(data[\"Total Negative\"]).toLocaleString('en-US')}</span>\n\t</div>\n\t<div class=\"brief-grid-item\">\n\t\t<h3 class=\"posheader\">Positive Tests</h3>\n\t\t<span class=\"brief-stat\">{(data[\"Total Positive\"]).toLocaleString('en-US')}</span>\n\t</div>\n</div>\n",
    "<script>\n\timport { onMount } from 'svelte';\n\timport { scaleOrdinal } from 'd3-scale';\n\timport { select, mouse } from 'd3-selection';\n\timport { entries } from 'd3-collection';\n\timport { path } from 'd3-path';\n\timport { pie, arc } from 'd3-shape';\n\timport { negativePositive } from '../helpers/colors.js'\n\n\tlet d3 = {\n\t\tscaleOrdinal: scaleOrdinal,\n\t\tentries: entries,\n\t\tpie: pie,\n\t\tarc: arc,\n\t\tselect: select,\n\t\tmouse: mouse,\n\t\tpath: path,\n\t}\n\n\tlet el;\n\n\tconst padding = { top: 10, right: 40, bottom: 70, left: 50 };\n\n\n\n\texport let data = {data};\n\texport let width = {width};\n\texport let height = {height};\n\n\tdata = data[data.length-1] // only use latest day's data\n\n\n\t// function showPctTip(d, target, mouse) {\n\t// \ttarget\n\t// \t  .style(\"position\", \"absolute\")\n\t// \t  .style(\"left\", (mouse[0] + document.getElementById('covid-testing-dashboard').offsetLeft + 500) + \"px\")\n\t// \t  .style(\"top\", (mouse[1] + document.getElementById('covid-testing-dashboard').offsetTop + 670) + \"px\")\n\t// \t  .style(\"display\", \"inline-block\")\n\t// \t  .html(\n\t// \t\t  \"<div class='tipdate'>As of \" + data[\"Date\"] + \":</div>\" +\n\t// \t\t  \"Negative rate: \" + (data[\"Seven-Day Negative\"] / data[\"Seven-Day Tests\"]).toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2}) + \"<br/>\" +\n\t// \t\t  \"Positive rate: \" + (data[\"Seven-Day Positive\"] / data[\"Seven-Day Tests\"]).toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2}) + \"<br/>\"\n\t// \t\t);\n\t// }\n\n\tonMount(generateDonut);\n\n\tfunction generateDonut() {\n\t\t// var tooltip = d3.select(el).append(\"div\").attr(\"class\", \"pcttooltip\");\n\n\t\t// var donutcaption = d3.select(el)\n\t\t// \t.append(\"div\")\n\t\t// \t.style(\"text-align\", \"center\")\n\t\t// \t.style(\"margin\", \"0 auto 2rem\")\n\t\t//\n\t\t// // donutcaption.append(\"div\")\n\t\t// // \t.style(\"font-size\", \"1rem\")\n\t\t// // \t.style(\"line-height\", \"1.25rem\")\n\t\t// // \t.text(\"7-day average of positive test results at Northeastern: \")\n\t\t// //\n\t\t// donutcaption.append(\"div\")\n\t\t// \t.style(\"font-size\", \"1.5rem\")\n\t\t// \t.style(\"color\", \"#D41B2C\")\n\t\t// \t.style(\"font-weight\", \"700\")\n\t\t// \t.style(\"margin-bottom\", \"0rem\")\n\t\t// \t.text(\"Students\")\n\t\t// \t.attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n\t\tvar svg = d3.select(el)\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.append(\"g\")\n\t\t\t.append(\"g\")\n      \t.attr(\"transform\", \"translate(\" + width / 2.2 + \",\" + height / 2 + \")\");\n\n\t\tvar donutdata = {a: data[\"Hospital\"], b: data[\"Non-hospital\"]}\n\n\t\tvar color = d3.scaleOrdinal()\n\t\t  .domain(donutdata)\n\t\t  .range([\"#6e016b\", \"#9ebcda\"])\n\n\t\t// Compute the position of each group on the pie:\n\t\tvar pie = d3.pie()\n\t\t  .value(function(d) {return d.value; })\n\t\tvar data_ready = pie(d3.entries(donutdata))\n\n\t\t// Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n \t\tsvg\n\t\t  .selectAll('whatever')\n\t\t  .data(data_ready)\n\t\t  .enter()\n\t\t  .append('path')\n\t\t  .attr('d', d3.arc()\n\t\t    .innerRadius(width * 0.35)         // This is the size of the donut hole\n\t\t    .outerRadius(width * 0.45)\n\t\t  )\n\t  \t  .attr('fill', function(d){ return(color(d.data.key)) })\n\t\t  .attr('stroke-width', 0)\n\n\t\tsvg.append(\"text\")\n\t\t.style(\"fill\", \"#6e016b\")\n\t\t.style(\"font-size\", \"1.5rem\")\n\t\t.style(\"font-weight\", \"700\")\n\t\t.attr(\"text-anchor\", \"middle\")\n\t\t.text((data[\"Hospital\"]).toLocaleString())\n\n\t\t// .text((data[\"Seven-Day Positive\"] / data[\"Seven-Day Tests\"]).toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2}))\n\t\t// .style(\"color\", \"#D41B2C\")\n\n\t\t  // .on(\"mousemove\", function(d){\n\t\t\t//     if (window.innerWidth > 600) {\n        //      \tshowPctTip(d, tooltip, d3.mouse(this))\n\t\t\t// \t}\n        //  })\n     \t  // .on(\"mouseout\", function(d){\n \t\t\t//   tooltip.style(\"display\", \"none\")\n \t\t  // });\n\n\n\t}\n</script>\n\n<style>\n\t.chart :global(.tipdate) {\n\t\tfont-size:1.2rem;\n\t\tfont-weight:bold;\n\t\tmargin:0 auto 0.5rem;\n\t}\n\n\t.chart :global(.pcttooltip) {\n\t\tdisplay:none;\n\t\tposition: absolute;\n\t\tbackground-color: white;\n\t\tborder:2px solid black;\n\t\tborder-radius:10px;\n\t\tpadding: 10px;\n\t\twidth:300px;\n\t}\n</style>\n\n<div bind:this={el} class=\"chart\"></div>\n",
    "<script>\n\timport { onMount } from 'svelte';\n\timport { scaleOrdinal } from 'd3-scale';\n\timport { select, mouse } from 'd3-selection';\n\timport { entries } from 'd3-collection';\n\timport { path } from 'd3-path';\n\timport { pie, arc } from 'd3-shape';\n\timport { negativePositive } from '../helpers/colors.js'\n\n\tlet d3 = {\n\t\tscaleOrdinal: scaleOrdinal,\n\t\tentries: entries,\n\t\tpie: pie,\n\t\tarc: arc,\n\t\tselect: select,\n\t\tmouse: mouse,\n\t\tpath: path,\n\t}\n\n\tlet el;\n\n\tconst padding = { top: 10, right: 40, bottom: 70, left: 50 };\n\n\n\n\texport let data = {data};\n\texport let width = {width};\n\texport let height = {height};\n\n\tdata = data[data.length-1] // only use latest day's data\n\n\n\t// function showPctTip(d, target, mouse) {\n\t// \ttarget\n\t// \t  .style(\"position\", \"absolute\")\n\t// \t  .style(\"left\", (mouse[0] + document.getElementById('covid-testing-dashboard').offsetLeft + 500) + \"px\")\n\t// \t  .style(\"top\", (mouse[1] + document.getElementById('covid-testing-dashboard').offsetTop + 670) + \"px\")\n\t// \t  .style(\"display\", \"inline-block\")\n\t// \t  .html(\n\t// \t\t  \"<div class='tipdate'>As of \" + data[\"Date\"] + \":</div>\" +\n\t// \t\t  \"Negative rate: \" + (data[\"Seven-Day Negative\"] / data[\"Seven-Day Tests\"]).toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2}) + \"<br/>\" +\n\t// \t\t  \"Positive rate: \" + (data[\"Seven-Day Positive\"] / data[\"Seven-Day Tests\"]).toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2}) + \"<br/>\"\n\t// \t\t);\n\t// }\n\n\tonMount(generateDonut);\n\n\tfunction generateDonut() {\n\t\t// var tooltip = d3.select(el).append(\"div\").attr(\"class\", \"pcttooltip\");\n\n\t\t// var donutcaption = d3.select(el)\n\t\t// \t.append(\"div\")\n\t\t// \t.style(\"text-align\", \"center\")\n\t\t// \t.style(\"margin\", \"0 auto 2rem\")\n\t\t//\n\t\t// // donutcaption.append(\"div\")\n\t\t// // \t.style(\"font-size\", \"1rem\")\n\t\t// // \t.style(\"line-height\", \"1.25rem\")\n\t\t// // \t.text(\"7-day average of positive test results at Northeastern: \")\n\t\t// //\n\t\t// donutcaption.append(\"div\")\n\t\t// \t.style(\"font-size\", \"1.5rem\")\n\t\t// \t.style(\"color\", \"#D41B2C\")\n\t\t// \t.style(\"font-weight\", \"700\")\n\t\t// \t.style(\"margin-bottom\", \"0rem\")\n\t\t// \t.text(\"Students\")\n\t\t// \t.attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n\t\tvar svg = d3.select(el)\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.append(\"g\")\n\t\t\t.append(\"g\")\n      \t.attr(\"transform\", \"translate(\" + width / 2.2 + \",\" + height / 2 + \")\");\n\n\t\tvar donutdata = {a: data[\"Seven-Day Positive\"], b: data[\"Seven-Day Negative\"]}\n\n\t\tvar color = d3.scaleOrdinal()\n\t\t  .domain(donutdata)\n\t\t  .range([\"#6e016b\", \"#9ebcda\"])\n\t\t  // .range(negativepositive.reverse())\n\n\t\t// Compute the position of each group on the pie:\n\t\tvar pie = d3.pie()\n\t\t  .value(function(d) {return d.value; })\n\t\tvar data_ready = pie(d3.entries(donutdata))\n\n\t\t// Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n \t\tsvg\n\t\t  .selectAll('whatever')\n\t\t  .data(data_ready)\n\t\t  .enter()\n\t\t  .append('path')\n\t\t  .attr('d', d3.arc()\n\t\t    .innerRadius(width * 0.35)         // This is the size of the donut hole\n\t\t    .outerRadius(width * 0.45)\n\t\t  )\n\t  \t  .attr('fill', function(d){ return(color(d.data.key)) })\n\t\t  .attr('stroke-width', 0)\n\n\t\tsvg.append(\"text\")\n\t\t.style(\"fill\", \"#6e016b\")\n\t\t.style(\"font-size\", \"1.5rem\")\n\t\t.style(\"font-weight\", \"700\")\n\t\t.attr(\"text-anchor\", \"middle\")\n\t\t.text((data[\"Seven-Day Positive\"] / data[\"Seven-Day Tests\"]).toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2}))\n\t\t// .style(\"color\", \"#D41B2C\")\n\n\t\t  // .on(\"mousemove\", function(d){\n\t\t\t//     if (window.innerWidth > 600) {\n        //      \tshowPctTip(d, tooltip, d3.mouse(this))\n\t\t\t// \t}\n        //  })\n     \t  // .on(\"mouseout\", function(d){\n \t\t\t//   tooltip.style(\"display\", \"none\")\n \t\t  // });\n\n\n\t}\n</script>\n\n<style>\n\t.chart :global(.tipdate) {\n\t\tfont-size:1.2rem;\n\t\tfont-weight:bold;\n\t\tmargin:0 auto 0.5rem;\n\t}\n\n\t.chart :global(.pcttooltip) {\n\t\tdisplay:none;\n\t\tposition: absolute;\n\t\tbackground-color: white;\n\t\tborder:2px solid black;\n\t\tborder-radius:10px;\n\t\tpadding: 10px;\n\t\twidth:300px;\n\t}\n</style>\n\n<div bind:this={el} class=\"chart\"></div>\n",
    "<script>\n\timport { onMount } from 'svelte';\n\timport { scaleOrdinal } from 'd3-scale';\n\timport { select, mouse } from 'd3-selection';\n\timport { entries } from 'd3-collection';\n\timport { path } from 'd3-path';\n\timport { pie, arc } from 'd3-shape';\n\timport { negativePositive } from '../helpers/colors.js'\n\n\tlet d3 = {\n\t\tscaleOrdinal: scaleOrdinal,\n\t\tentries: entries,\n\t\tpie: pie,\n\t\tarc: arc,\n\t\tselect: select,\n\t\tmouse: mouse,\n\t\tpath: path,\n\t}\n\n\tlet el;\n\n\tconst padding = { top: 10, right: 40, bottom: 70, left: 50 };\n\n\n\n\n\texport let data = {data};\n\texport let width = {width};\n\texport let height = {height};\n\n\tdata = data[data.length-1] // only use latest day's data\n\n\n\t// function showPctTip(d, target, mouse) {\n\t// \ttarget\n\t// \t  .style(\"position\", \"absolute\")\n\t// \t  .style(\"left\", (mouse[0] + document.getElementById('covid-testing-dashboard').offsetLeft + 500) + \"px\")\n\t// \t  .style(\"top\", (mouse[1] + document.getElementById('covid-testing-dashboard').offsetTop + 670) + \"px\")\n\t// \t  .style(\"display\", \"inline-block\")\n\t// \t  .html(\n\t// \t\t  \"<div class='tipdate'>As of \" + data[\"Date\"] + \":</div>\" +\n\t// \t\t  \"Negative rate: \" + (data[\"Seven-Day Negative\"] / data[\"Seven-Day Tests\"]).toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2}) + \"<br/>\" +\n\t// \t\t  \"Positive rate: \" + (data[\"Seven-Day Positive\"] / data[\"Seven-Day Tests\"]).toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2}) + \"<br/>\"\n\t// \t\t);\n\t// }\n\n\tonMount(generateDonut);\n\n\tfunction generateDonut() {\n\t\t// var tooltip = d3.select(el).append(\"div\").attr(\"class\", \"pcttooltip\");\n\n\t\tvar donutcaption = d3.select(el)\n\t\t\t.append(\"div\")\n\t\t\t.attr(\"class\", \"donut-title\")\n\t\t\t.style(\"text-align\", \"center\")\n\t\t\t// .style(\"margin\", \"0 auto 1rem\")\n\n\t\t// donutcaption.append(\"div\")\n\t\t// \t.style(\"font-size\", \"1rem\")\n\t\t// \t.style(\"line-height\", \"1.25rem\")\n\t\t// \t.text(\"7-day average of positive test results at Northeastern: \")\n\t\t//\n\t\tdonutcaption.append(\"div\")\n\t\t\t.style(\"font-size\", \"1.5rem\")\n\t\t\t.style(\"color\", \"#6e016b\")\n\t\t\t.style(\"font-weight\", \"700\")\n\t\t\t.style(\"margin-bottom\", \"0rem\")\n\t\t\t.text(function(d){\n\n\t\t\t\treturn \"Students\"\n\t\t\t})\n\t\t// \t.attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n\t\tvar svg = d3.select(el)\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.append(\"g\")\n\t\t\t.append(\"g\")\n      \t.attr(\"transform\", \"translate(\" + width / 2.2 + \",\" + height / 2 + \")\");\n\n\t\t// var donutdata = {a: data[\"Seven-Day Positive\"], b: data[\"Seven-Day Negative\"]}\n\t\tvar donutdata = {a: data[\"Students Total Positive\"], b: data[\"Students Total Negative\"]}\n\n\t\tvar color = d3.scaleOrdinal()\n\t\t  .domain(donutdata)\n\t\t  .range([\"#6e016b\", \"#9ebcda\"])\n\n\t\t  // .range(negativepositive.reverse())\n\n\t\t// Compute the position of each group on the pie:\n\t\tvar pie = d3.pie()\n\t\t  .value(function(d) {return d.value; })\n\t\tvar data_ready = pie(d3.entries(donutdata))\n\n\t\t// Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n \t\tsvg\n\t\t  .selectAll('whatever')\n\t\t  .data(data_ready)\n\t\t  .enter()\n\t\t  .append('path')\n\t\t  .attr('d', d3.arc()\n\t\t    .innerRadius(width * 0.35)         // This is the size of the donut hole\n\t\t    .outerRadius(width * 0.45)\n\t\t  )\n\t  \t  .attr('fill', function(d){ return(color(d.data.key)) })\n\t\t  .attr('stroke-width', 0)\n\n\t\tsvg.append(\"text\")\n\t\t.style(\"fill\", \"#6e016b\")\n\t\t.style(\"font-size\", \"1.5rem\")\n\t\t.style(\"font-weight\", \"700\")\n\t\t.attr(\"text-anchor\", \"middle\")\n\t\t.text((data[\"Students Total Positive\"] ).toLocaleString())\n\t\t// .text((data[\"Seven-Day Positive\"] / data[\"Seven-Day Tests\"]).toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2}))\n\t\t// .style(\"color\", \"#D41B2C\")\n\n\t\t  // .on(\"mousemove\", function(d){\n\t\t\t//     if (window.innerWidth > 600) {\n        //      \tshowPctTip(d, tooltip, d3.mouse(this))\n\t\t\t// \t}\n        //  })\n     \t  // .on(\"mouseout\", function(d){\n \t\t\t//   tooltip.style(\"display\", \"none\")\n \t\t  // });\n\n\n\t}\n</script>\n\n<style>\n\t.chart :global(.tipdate) {\n\t\tfont-size:1.2rem;\n\t\tfont-weight:bold;\n\t\tmargin:0 auto 0.5rem;\n\t}\n\n\t.chart :global(.pcttooltip) {\n\t\tdisplay:none;\n\t\tposition: absolute;\n\t\tbackground-color: white;\n\t\tborder:2px solid black;\n\t\tborder-radius:10px;\n\t\tpadding: 10px;\n\t\twidth:300px;\n\t}\n</style>\n\n<div bind:this={el} class=\"chart\"></div>\n",
    "<script>\n\timport { onMount } from 'svelte';\n\timport { scaleOrdinal } from 'd3-scale';\n\timport { select, mouse } from 'd3-selection';\n\timport { entries } from 'd3-collection';\n\timport { path } from 'd3-path';\n\timport { pie, arc } from 'd3-shape';\n\timport { negativePositive } from '../helpers/colors.js'\n\n\tlet d3 = {\n\t\tscaleOrdinal: scaleOrdinal,\n\t\tentries: entries,\n\t\tpie: pie,\n\t\tarc: arc,\n\t\tselect: select,\n\t\tmouse: mouse,\n\t\tpath: path,\n\t}\n\n\tlet el;\n\n\tconst padding = { top: 10, right: 40, bottom: 70, left: 50 };\n\n\n\n\n\texport let data = {data};\n\texport let width = {width};\n\texport let height = {height};\n\n\tdata = data[data.length-1] // only use latest day's data\n\n\n\t// function showPctTip(d, target, mouse) {\n\t// \ttarget\n\t// \t  .style(\"position\", \"absolute\")\n\t// \t  .style(\"left\", (mouse[0] + document.getElementById('covid-testing-dashboard').offsetLeft + 500) + \"px\")\n\t// \t  .style(\"top\", (mouse[1] + document.getElementById('covid-testing-dashboard').offsetTop + 670) + \"px\")\n\t// \t  .style(\"display\", \"inline-block\")\n\t// \t  .html(\n\t// \t\t  \"<div class='tipdate'>As of \" + data[\"Date\"] + \":</div>\" +\n\t// \t\t  \"Negative rate: \" + (data[\"Seven-Day Negative\"] / data[\"Seven-Day Tests\"]).toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2}) + \"<br/>\" +\n\t// \t\t  \"Positive rate: \" + (data[\"Seven-Day Positive\"] / data[\"Seven-Day Tests\"]).toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2}) + \"<br/>\"\n\t// \t\t);\n\t// }\n\n\tonMount(generateDonut);\n\n\tfunction generateDonut() {\n\t\t// var tooltip = d3.select(el).append(\"div\").attr(\"class\", \"pcttooltip\");\n\n\t\tvar donutcaption = d3.select(el)\n\t\t\t.append(\"div\")\n\t\t\t.style(\"text-align\", \"center\")\n\t\t\t// .style(\"margin\", \"0 auto 1rem\")\n\n\t\t// donutcaption.append(\"div\")\n\t\t// \t.style(\"font-size\", \"1rem\")\n\t\t// \t.style(\"line-height\", \"1.25rem\")\n\t\t// \t.text(\"7-day average of positive test results at Northeastern: \")\n\t\t//\n\t\tdonutcaption.append(\"div\")\n\t\t\t.style(\"font-size\", \"1.5rem\")\n\t\t\t.style(\"color\", \"#6e016b\")\n\t\t\t.style(\"font-weight\", \"700\")\n\t\t\t.style(\"margin-bottom\", \"0rem\")\n\t\t\t.text(function(d){\n\n\t\t\t\treturn \"Faculty/Staff\"\n\t\t\t})\n\t\t// \t.attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n\t\tvar svg = d3.select(el)\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.append(\"g\")\n\t\t\t.append(\"g\")\n      \t.attr(\"transform\", \"translate(\" + width / 2.2 + \",\" + height / 2 + \")\");\n\n\t\t// var donutdata = {a: data[\"Seven-Day Positive\"], b: data[\"Seven-Day Negative\"]}\n\t\tvar donutdata = {a: data[\"FacStaff Total Positive\"], b: data[\"FacStaff Total Negative\"]}\n\n\t\tvar color = d3.scaleOrdinal()\n\t\t  .domain(donutdata)\n\t\t  .range([\"#6e016b\", \"#9ebcda\"])\n\n\t\t  // .range(negativepositive.reverse())\n\n\t\t// Compute the position of each group on the pie:\n\t\tvar pie = d3.pie()\n\t\t  .value(function(d) {return d.value; })\n\t\tvar data_ready = pie(d3.entries(donutdata))\n\n\t\t// Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n \t\tsvg\n\t\t  .selectAll('whatever')\n\t\t  .data(data_ready)\n\t\t  .enter()\n\t\t  .append('path')\n\t\t  .attr('d', d3.arc()\n\t\t    .innerRadius(width * 0.35)         // This is the size of the donut hole\n\t\t    .outerRadius(width * 0.45)\n\t\t  )\n\t  \t  .attr('fill', function(d){ return(color(d.data.key)) })\n\t\t  .attr('stroke-width', 0)\n\n\t\tsvg.append(\"text\")\n\t\t.style(\"fill\", \"#6e016b\")\n\t\t.style(\"font-size\", \"1.5rem\")\n\t\t.style(\"font-weight\", \"700\")\n\t\t.attr(\"text-anchor\", \"middle\")\n\t\t.text((data[\"FacStaff Total Positive\"] ).toLocaleString())\n\t\t// .text((data[\"Seven-Day Positive\"] / data[\"Seven-Day Tests\"]).toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2}))\n\t\t// .style(\"color\", \"#D41B2C\")\n\n\t\t  // .on(\"mousemove\", function(d){\n\t\t\t//     if (window.innerWidth > 600) {\n        //      \tshowPctTip(d, tooltip, d3.mouse(this))\n\t\t\t// \t}\n        //  })\n     \t  // .on(\"mouseout\", function(d){\n \t\t\t//   tooltip.style(\"display\", \"none\")\n \t\t  // });\n\n\n\t}\n</script>\n\n<style>\n\t.chart :global(.tipdate) {\n\t\tfont-size:1.2rem;\n\t\tfont-weight:bold;\n\t\tmargin:0 auto 0.5rem;\n\t}\n\n\t.chart :global(.pcttooltip) {\n\t\tdisplay:none;\n\t\tposition: absolute;\n\t\tbackground-color: white;\n\t\tborder:2px solid black;\n\t\tborder-radius:10px;\n\t\tpadding: 10px;\n\t\twidth:300px;\n\t}\n</style>\n\n<div bind:this={el} class=\"chart\"></div>\n",
    "<script>\n\timport { onMount } from 'svelte';\n\timport { scaleOrdinal } from 'd3-scale';\n\timport { select, mouse } from 'd3-selection';\n\timport { entries } from 'd3-collection';\n\timport { path } from 'd3-path';\n\timport { pie, arc } from 'd3-shape';\n\timport { negativePositive } from '../helpers/colors.js'\n\n\tlet d3 = {\n\t\tscaleOrdinal: scaleOrdinal,\n\t\tentries: entries,\n\t\tpie: pie,\n\t\tarc: arc,\n\t\tselect: select,\n\t\tmouse: mouse,\n\t\tpath: path,\n\t}\n\n\tlet el;\n\n\tconst padding = { top: 10, right: 40, bottom: 70, left: 50 };\n\n\n\n\n\texport let data = {data};\n\texport let width = {width};\n\texport let height = {height};\n\n\tdata = data[data.length-1] // only use latest day's data\n\n\n\t// function showPctTip(d, target, mouse) {\n\t// \ttarget\n\t// \t  .style(\"position\", \"absolute\")\n\t// \t  .style(\"left\", (mouse[0] + document.getElementById('covid-testing-dashboard').offsetLeft + 500) + \"px\")\n\t// \t  .style(\"top\", (mouse[1] + document.getElementById('covid-testing-dashboard').offsetTop + 670) + \"px\")\n\t// \t  .style(\"display\", \"inline-block\")\n\t// \t  .html(\n\t// \t\t  \"<div class='tipdate'>As of \" + data[\"Date\"] + \":</div>\" +\n\t// \t\t  \"Negative rate: \" + (data[\"Seven-Day Negative\"] / data[\"Seven-Day Tests\"]).toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2}) + \"<br/>\" +\n\t// \t\t  \"Positive rate: \" + (data[\"Seven-Day Positive\"] / data[\"Seven-Day Tests\"]).toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2}) + \"<br/>\"\n\t// \t\t);\n\t// }\n\n\tonMount(generateDonut);\n\n\tfunction generateDonut() {\n\t\t// var tooltip = d3.select(el).append(\"div\").attr(\"class\", \"pcttooltip\");\n\n\t\tvar donutcaption = d3.select(el)\n\t\t\t.append(\"div\")\n\t\t\t.style(\"text-align\", \"center\")\n\t\t\t// .style(\"margin\", \"0 auto 1rem\")\n\n\t\t// donutcaption.append(\"div\")\n\t\t// \t.style(\"font-size\", \"1rem\")\n\t\t// \t.style(\"line-height\", \"1.25rem\")\n\t\t// \t.text(\"7-day average of positive test results at Northeastern: \")\n\t\t//\n\t\tdonutcaption.append(\"div\")\n\t\t\t.style(\"font-size\", \"1.5rem\")\n\t\t\t.style(\"color\", \"#6e016b\")\n\t\t\t.style(\"font-weight\", \"700\")\n\t\t\t.style(\"margin-bottom\", \"0rem\")\n\t\t\t.text(function(d){\n\n\t\t\t\treturn \"Contractors\"\n\t\t\t})\n\t\t// \t.attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n\t\tvar svg = d3.select(el)\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.append(\"g\")\n\t\t\t.append(\"g\")\n      \t.attr(\"transform\", \"translate(\" + width / 2.2 + \",\" + height / 2 + \")\");\n\n\t\t// var donutdata = {a: data[\"Seven-Day Positive\"], b: data[\"Seven-Day Negative\"]}\n\t\tvar donutdata = {a: data[\"Contractor Total Positive\"], b: data[\"Contractor Total Negative\"]}\n\n\t\tvar color = d3.scaleOrdinal()\n\t\t  .domain(donutdata)\n\t\t  .range([\"#6e016b\", \"#9ebcda\"])\n\n\t\t  // .range(negativepositive.reverse())\n\n\t\t// Compute the position of each group on the pie:\n\t\tvar pie = d3.pie()\n\t\t  .value(function(d) {return d.value; })\n\t\tvar data_ready = pie(d3.entries(donutdata))\n\n\t\t// Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n \t\tsvg\n\t\t  .selectAll('whatever')\n\t\t  .data(data_ready)\n\t\t  .enter()\n\t\t  .append('path')\n\t\t  .attr('d', d3.arc()\n\t\t    .innerRadius(width * 0.35)         // This is the size of the donut hole\n\t\t    .outerRadius(width * 0.45)\n\t\t  )\n\t  \t  .attr('fill', function(d){ return(color(d.data.key)) })\n\t\t  .attr('stroke-width', 0)\n\n\t\tsvg.append(\"text\")\n\t\t.style(\"fill\", \"#6e016b\")\n\t\t.style(\"font-size\", \"1.5rem\")\n\t\t.style(\"font-weight\", \"700\")\n\t\t.attr(\"text-anchor\", \"middle\")\n\t\t.text((data[\"Contractor Total Positive\"] ).toLocaleString())\n\t\t// .text((data[\"Seven-Day Positive\"] / data[\"Seven-Day Tests\"]).toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2}))\n\t\t// .style(\"color\", \"#D41B2C\")\n\n\t\t  // .on(\"mousemove\", function(d){\n\t\t\t//     if (window.innerWidth > 600) {\n        //      \tshowPctTip(d, tooltip, d3.mouse(this))\n\t\t\t// \t}\n        //  })\n     \t  // .on(\"mouseout\", function(d){\n \t\t\t//   tooltip.style(\"display\", \"none\")\n \t\t  // });\n\n\n\t}\n</script>\n\n<style>\n\t.chart :global(.tipdate) {\n\t\tfont-size:1.2rem;\n\t\tfont-weight:bold;\n\t\tmargin:0 auto 0.5rem;\n\t}\n\n\t.chart :global(.pcttooltip) {\n\t\tdisplay:none;\n\t\tposition: absolute;\n\t\tbackground-color: white;\n\t\tborder:2px solid black;\n\t\tborder-radius:10px;\n\t\tpadding: 10px;\n\t\twidth:300px;\n\t}\n</style>\n\n<div bind:this={el} class=\"chart\"></div>\n",
    "<script>\n\timport { onMount } from 'svelte';\n\timport { scaleOrdinal } from 'd3-scale';\n\timport { select, mouse } from 'd3-selection';\n\timport { entries } from 'd3-collection';\n\timport { path } from 'd3-path';\n\timport { pie, arc } from 'd3-shape';\n\timport { negativePositive } from '../helpers/colors.js'\n\n\tlet d3 = {\n\t\tscaleOrdinal: scaleOrdinal,\n\t\tentries: entries,\n\t\tpie: pie,\n\t\tarc: arc,\n\t\tselect: select,\n\t\tmouse: mouse,\n\t\tpath: path,\n\t}\n\n\tlet el;\n\n\tconst padding = { top: 10, right: 40, bottom: 70, left: 50 };\n\n\n\n\texport let data = {data};\n\texport let width = {width};\n\texport let height = {height};\n\n\tdata = data[data.length-1] // only use latest day's data\n\n\n\t// function showPctTip(d, target, mouse) {\n\t// \ttarget\n\t// \t  .style(\"position\", \"absolute\")\n\t// \t  .style(\"left\", (mouse[0] + document.getElementById('covid-testing-dashboard').offsetLeft + 500) + \"px\")\n\t// \t  .style(\"top\", (mouse[1] + document.getElementById('covid-testing-dashboard').offsetTop + 670) + \"px\")\n\t// \t  .style(\"display\", \"inline-block\")\n\t// \t  .html(\n\t// \t\t  \"<div class='tipdate'>As of \" + data[\"Date\"] + \":</div>\" +\n\t// \t\t  \"Negative rate: \" + (data[\"Seven-Day Negative\"] / data[\"Seven-Day Tests\"]).toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2}) + \"<br/>\" +\n\t// \t\t  \"Positive rate: \" + (data[\"Seven-Day Positive\"] / data[\"Seven-Day Tests\"]).toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2}) + \"<br/>\"\n\t// \t\t);\n\t// }\n\n\tonMount(generateDonut);\n\n\tfunction generateDonut() {\n\t\t// var tooltip = d3.select(el).append(\"div\").attr(\"class\", \"pcttooltip\");\n\n\t\t// var donutcaption = d3.select(el)\n\t\t// \t.append(\"div\")\n\t\t// \t.style(\"text-align\", \"center\")\n\t\t// \t.style(\"margin\", \"0 auto 2rem\")\n\t\t//\n\t\t// // donutcaption.append(\"div\")\n\t\t// // \t.style(\"font-size\", \"1rem\")\n\t\t// // \t.style(\"line-height\", \"1.25rem\")\n\t\t// // \t.text(\"7-day average of positive test results at Northeastern: \")\n\t\t// //\n\t\t// donutcaption.append(\"div\")\n\t\t// \t.style(\"font-size\", \"1.5rem\")\n\t\t// \t.style(\"color\", \"#D41B2C\")\n\t\t// \t.style(\"font-weight\", \"700\")\n\t\t// \t.style(\"margin-bottom\", \"0rem\")\n\t\t// \t.text(\"Students\")\n\t\t// \t.attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n\t\tvar svg = d3.select(el)\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height)\n\t\t\t.append(\"g\")\n\t\t\t.append(\"g\")\n      \t.attr(\"transform\", \"translate(\" + width / 2.2 + \",\" + height / 2 + \")\");\n\n\t\tvar donutdata = {a: data[\"Total Vaccinated\"], b: data[\"Total Non-Vaccinated\"]}\n\n\t\tvar color = d3.scaleOrdinal()\n\t\t  .domain(donutdata)\n\t\t  .range([\"#6e016b\", \"#9ebcda\"])\n\n\t\t// Compute the position of each group on the pie:\n\t\tvar pie = d3.pie()\n\t\t  .value(function(d) {return d.value; })\n\t\tvar data_ready = pie(d3.entries(donutdata))\n\n\t\tvar total_vac = data[\"Total Vaccinated\"] + data[\"Total Non-Vaccinated\"];\n\n\t\t// Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n \t\tsvg\n\t\t  .selectAll('whatever')\n\t\t  .data(data_ready)\n\t\t  .enter()\n\t\t  .append('path')\n\t\t  .attr('d', d3.arc()\n\t\t    .innerRadius(width * 0.35)         // This is the size of the donut hole\n\t\t    .outerRadius(width * 0.45)\n\t\t  )\n\t  \t  .attr('fill', function(d){ return(color(d.data.key)) })\n\t\t  .attr('stroke-width', 0)\n\n\t\tsvg.append(\"text\")\n\t\t.style(\"fill\", \"#6e016b\")\n\t\t.style(\"font-size\", \"1.5rem\")\n\t\t.style(\"font-weight\", \"700\")\n\t\t.attr(\"text-anchor\", \"middle\")\n\t\t.text((data[\"Total Vaccinated\"] / (total_vac)).toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2}))\n\n\t\tconsole.log(total_vac)\n\t\t// .text((data[\"Seven-Day Positive\"] / data[\"Seven-Day Tests\"]).toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2}))\n\t\t// .style(\"color\", \"#D41B2C\")\n\n\t\t  // .on(\"mousemove\", function(d){\n\t\t\t//     if (window.innerWidth > 600) {\n        //      \tshowPctTip(d, tooltip, d3.mouse(this))\n\t\t\t// \t}\n        //  })\n     \t  // .on(\"mouseout\", function(d){\n \t\t\t//   tooltip.style(\"display\", \"none\")\n \t\t  // });\n\n\n\t}\n</script>\n\n<style>\n\t.chart :global(.tipdate) {\n\t\tfont-size:1.2rem;\n\t\tfont-weight:bold;\n\t\tmargin:0 auto 0.5rem;\n\t}\n\n\t.chart :global(.pcttooltip) {\n\t\tdisplay:none;\n\t\tposition: absolute;\n\t\tbackground-color: white;\n\t\tborder:2px solid black;\n\t\tborder-radius:10px;\n\t\tpadding: 10px;\n\t\twidth:300px;\n\t}\n</style>\n\n<div bind:this={el} class=\"chart\"></div>\n",
    "<script>\nimport { onMount } from 'svelte';\nimport { scaleLinear, scaleBand, scaleOrdinal } from 'd3-scale';\nimport { axisLeft, axisRight, axisTop, axisBottom } from 'd3-axis';\nimport { select, mouse } from 'd3-selection';\nimport { line, curveMonotoneX, curveNatural } from 'd3-shape';\nimport { path } from 'd3-path';\nimport { interpolateRound } from 'd3-interpolate';\nimport 'd3-transition'\nimport { legendColor } from 'd3-svg-legend';\n\nlet d3 = {\n\tscaleLinear: scaleLinear,\n\tscaleBand: scaleBand,\n\tscaleOrdinal: scaleOrdinal,\n\tselect: select,\n\tmouse: mouse,\n\taxisLeft: axisLeft,\n\taxisRight: axisRight,\n\taxisBottom: axisBottom,\n\taxisTop: axisTop,\n\tline: line,\n\tpath: path,\n\tcurveMonotoneX: curveMonotoneX,\n\tcurveNatural: curveNatural,\n\tinterpolateRound: interpolateRound,\n\tlegendColor: legendColor\n}\n\nlet el;\n\nconst padding = { top: 50, right: 0, bottom: 40, left: 40 };\n\n\n\nexport let data = {data};\nexport let width = {width};\nexport let height = {height};\nexport let xVar = {xVar};\nexport let yVar = {yVar};\nexport let yGroups = {yGroups};\nexport let colorscheme = {colorscheme};\nexport let colorsteps = yGroups.length;\nexport let len = data.length;\n\n// for (let k=0; k < (len-31); k++) {\n// \tdata.shift()\n// }\n\n\n// data.forEach(function(d,i){\n// \tif (i > (avgdaycount-2)) {\n// \t\tlet array = [];\n// \t\tfor (let j=0;  j<avgdaycount; j++) {\n// \t\t\tarray.push( +data[i-j][yVar] )\n// \t\t}\n// \t\tlet avg = array.reduce((a, b) => a + b, 0) / avgdaycount;\n// \t\tdata[i][\"rollingavg\"] = Math.round(avg);\n// \t}\n// })\n\n$: xScale = d3.scaleBand()\n\t.domain(data.map(function(o) { return o[xVar]; }))\n\t.range([1, width - padding.left - padding.right])\n\t.padding(0.1);\n\n$: yScale = d3.scaleLinear()\n\t.domain([0, Math.max.apply(Math, data.map(function(o) { return o[yVar]; }))])\n\t.range([height - padding.bottom, padding.top])\n\t.nice();\n\n$: colors = d3.scaleOrdinal()\n\t.domain(yGroups)\n\t.range(colorscheme)\n\nfunction showTip(d, target, mouse) {\n\ttarget\n\t\t.style(\"position\", \"absolute\")\n\t\t.style(\"left\", (mouse[0] - 100) + \"px\")\n\t\t.style(\"top\", (mouse[1] - 150) + \"px\")\n\t\t.style(\"display\", \"inline-block\")\n\t\t.html(\n\t\t\tfunction(g) {\n\t\t\t\tlet arr = [];\n\t\t\t\tfor (g=0; g<yGroups.length; g++) {\n\t\t\t\t\tarr.push(\"<br/>\" + yGroups[g] + \": \" + d[yGroups[g]])\n\t\t\t\t}\n\t\t\t\treturn \"<div class='tipdate'>\" + d[xVar] + \"</div>\" + arr.join(' ')\n\t\t\t}\n\n\t\t);\n}\n\nonMount(generateColumnChart);\n\nfunction generateColumnChart() {\n\n\tvar tooltip = d3.select(el).append(\"div\").attr(\"class\", \"tooltip\");\n\n\tvar svg = d3.select(el)\n\t\t.append(\"svg\")\n\t\t.attr(\"width\", width)\n\t\t.attr(\"height\", height)\n\t\t.append(\"g\")\n\t\t.attr(\"transform\",\n\t\t\"translate(\" + padding.left + \",\" + 0 + \")\");\n\n\tlet axisBottomRender = svg.append(\"g\")\n\t\t.attr(\"transform\", \"translate(0,\" + (height-padding.bottom) + \")\")\n\t\t.attr(\"class\",\"horizontalAxis\")\n\t\t.call(\n\t\t\td3.axisBottom(xScale)\n\t\t\t\t// .tickValues(xScale.domain().filter(function(d,i){\n\t\t\t\t// \tconsole.log(d)\n\t\t\t\t// \t// let tickCount = Math.round(xScale.domain().length/10);\n\t\t\t\t// \t// let lastTick = xScale.domain().length-1;\n\t\t\t\t// \t// return ((i % tickCount) === (lastTick % tickCount))\n\t\t\t\t// }))\n\t\t\t\t.tickSize(0)\n\t\t);\n\n\taxisBottomRender.selectAll(\"path\")\n\t\t.attr(\"stroke\", \"#ccc\");\n\n\taxisBottomRender.selectAll(\"text\")\n\t\t.style(\"text-anchor\", \"end\")\n\t\t.attr(\"transform\", (\"rotate(-45)\"))\n\t\t.attr(\"dx\", -3)\n\t\t.attr(\"dy\", 3.5)\n\n\n\tlet axisVerticalRender = svg.append(\"g\")\n\t\t.attr(\"class\",\"verticalAxis\")\n\t\t.call(\n\t\t\td3.axisLeft(yScale)\n\t\t\t\t.ticks(Math.min(6, yScale.domain()[1]))\n\t\t\t\t.tickSize(0)\n\t\t);\n\n\taxisVerticalRender.selectAll(\"path\")\n\t\t.attr(\"stroke\", \"#ccc\");\n\n\t// add data columns\n\tfor (let i=0; i<yGroups.length; i++) {\n\t\tsvg.append('g')\n\t\t\t.selectAll(\"rect\")\n\t\t\t.data(data)\n\t\t\t.enter()\n\t\t\t.append(\"rect\")\n\t\t\t.attr(\"fill\", colors(yGroups[i]))\n\t\t\t.attr(\"x\", function (d) { return xScale(d[xVar]); })\n\t\t\t.attr(\"y\", function (d) {\n\t\t\t\tlet barheight = 0;\n\t\t\t\tfor (let j=i; j>-1; j = j-1) {\n\t\t\t\t\tbarheight += d[yGroups[j]]\n\t\t\t\t}\n\t\t\t\treturn yScale(barheight)\n\t\t\t})\n\t\t\t.attr(\"width\", xScale.bandwidth())\n\t\t\t.attr(\"height\", function(d) {\n\t\t\t\treturn height - padding.bottom - yScale(d[yGroups[i]]);\n\t\t\t})\n\t\t\t.on(\"mousemove\", function(d){\n\t\t\t\tif (window.innerWidth > 600) {\n\t\t\t\t\tshowTip(d, tooltip, d3.mouse(this))\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on(\"mouseout\", function(d){\n\t\t\t\ttooltip.style(\"display\", \"none\")\n\t\t\t});\n\t}\n\n\n}\n</script>\n\n<style>\n.chart :global() {\n\tposition:relative;\n}\n.chart :global(rect) {\n\t/* fill: #cfbabc; */\n}\n\n.chart :global(.tooltip) {\n\tdisplay:none;\n\tposition: absolute;\n\tbackground-color: white;\n\tborder:2px solid black;\n\tborder-radius:10px;\n\tpadding: 10px;\n\twidth:300px;\n}\n\n.chart :global(.legendCells .cell) {\n\tfont-size:0.65rem;\n\tfill: #777;\n\ttext-transform:uppercase;\n}\n\n.chart :global(.tipdate) {\n\tfont-size:1.2rem;\n\tfont-weight:bold;\n\tmargin:0 auto;\n}\n\n/* .chart :global(.horizontalAxis .tick text) {\n\t visibility: hidden;\n}\n\n\n.chart :global(.horizontalAxis .tick:nth-last-child(7n+1) text) {\n\t visibility: visible;\n}\n\n@media screen and (max-width:600px) {\n\t.chart :global(.horizontalAxis .tick:nth-last-child(7n+1) text) {\n\t\t visibility: hidden;\n\t}\n\n\t.chart :global(.horizontalAxis .tick:nth-last-child(14n+1) text) {\n\t\t visibility: visible;\n\t}\n} */\n\n</style>\n\n<div bind:this={el} class=\"chart\"></div>\n",
    "<script>\n\timport { onMount } from 'svelte';\n\timport { scaleLinear, scaleBand, scaleOrdinal } from 'd3-scale';\n\timport { axisLeft, axisRight, axisTop, axisBottom } from 'd3-axis';\n\timport { format } from 'd3-format';\n\timport { select } from 'd3-selection';\n\timport { vibrant } from '../helpers/colors.js'\n\t// import { wrapLabel } from '../helpers/wrapLabel.js'\n\timport { legendColor } from 'd3-svg-legend';\n\n\tlet d3 = {\n\t\tscaleLinear: scaleLinear,\n\t\tscaleBand: scaleBand,\n\t\tscaleOrdinal: scaleOrdinal,\n\t\tselect: select,\n\t\taxisLeft: axisLeft,\n\t\taxisRight: axisRight,\n\t\taxisBottom: axisBottom,\n\t\taxisTop: axisTop,\n\t\tformat: format,\n\t\tlegendColor: legendColor\n\n\t}\n\n\tlet el;\n\n\tconst padding = { top: 10, right: 0, bottom: 50, left: 10 };\n\n\n\n\texport let data = {data};\n\texport let width = {width};\n\texport let height = {height};\n\texport let xVar = {xVar};\n\texport let yVar = {yVar};\n\texport let yGroups = {yGroups};\n\texport let colorsteps = yGroups.length;\n\texport let len = data.length;\n\texport let yDomain = ([0, 100])\n\texport let colorscheme = vibrant;\n\texport let orientation = \"horizontal\";\n\n\tif (Array.isArray(yVar)) {\n\t\tyVar = yVar\n\t} else {\n\t\tyVar = [yVar]\n\t}\n\n\t$: xScale = d3.scaleBand()\n\t\t.domain(data.map(function(o) { return o[xVar]; }))\n\t\t.rangeRound([0, width - padding.left - padding.right])\n\t\t.padding(0.2);\n\n\t$: yScale = d3.scaleLinear()\n\t\t.domain(yDomain)\n\t\t.range([height - padding.bottom, padding.top])\n\t\t.nice();\n\n\t$: colorScale = d3.scaleOrdinal()\n\t.domain(yGroups)\n\t.range(colorscheme)\n\t\t// .domain(data.map(function(o) { return o[xVar]; }))\n\t\t// .range(colorscheme);\n\n\tonMount(generateStackedColumn);\n\n\tfunction generateStackedColumn() {\n\t\tif (orientation !== \"vertical\") {\n\t\t\tpadding.top = 0;\n\t\t\tpadding.left = 75;\n\t\t\tpadding.right = 15;\n\t\t\tif (xVar === \"protest\") {\n\t\t\t\tpadding.left = 180\n\t\t\t}\n\t\t\txScale.rangeRound([padding.top, height - padding.bottom])\n\t\t\tyScale.range([0, width - padding.left - padding.right])\n\t\t}\n\n\t\t// let tooltip = d3.select(el).append(\"div\")\n\t\t// \t .attr(\"class\", \"tooltip\")\n\t\t//  tooltip.append(\"span\")\n\t\t// \t .attr(\"class\", \"part1\")\n\t\t// \t .text(\"TESTING\")\n\n\t\t// draw chart SVG\n\t\tvar svg = d3.select(el)\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"width\", width)\n\n\n\t\t\t.attr(\"height\", 80)\n\t\t\t.append(\"g\")\n\t\t\t.attr(\"transform\",\n\t\t\t\t  \"translate(\" + 20+ \",\" + padding.top + \")\");\n\n\n\n\n\t\t\t\t  if (orientation !== \"vertical\") {\n\n\n\t\t\t\t\t\t\t\t// svg.append(\"div\")\n\t\t\t\t\t\t\t\t// \t.style(\"font-size\", \"1.5rem\")\n\t\t\t\t\t\t\t\t// \t.style(\"color\", \"#6e016b\")\n\t\t\t\t\t\t\t\t// \t.style(\"font-weight\", \"700\")\n\t\t\t\t\t\t\t\t// \t.style(\"margin-bottom\", \"0rem\")\n\t\t\t\t\t\t\t\t// \t.text(\"Students\")\n\n\n\n\t\t\t\t\t\t\t\t// add data columns\n\t\t\t\t\t\t\t\tfor (let i=0; i<yGroups.length; i++) {\n\n\n\n\n\t\t\t\t\t\t\t\t \tsvg.append('g')\n\t\t\t\t\t\t\t\t\t\t.selectAll(\"rect\")\n\t\t\t\t\t\t\t\t\t\t.data(data)\n\t\t\t\t\t\t\t\t\t\t.enter()\n\t\t\t\t\t\t\t\t\t.append(\"rect\")\n\t\t\t\t\t\t\t\t\t.attr(\"fill\", colorScale(yGroups[i]))\n\t\t\t\t\t\t\t\t\t.attr(\"x\", function(d){\n\t\t\t\t\t\t\t\t\t\t\tlet barheight = 0;\n\t\t\t\t\t\t\t\t\t\t\tfor (let j=i; j>-1; j = j-1) {\n\t\t\t\t\t\t\t\t\t\t\t\tbarheight += d[yGroups[j]]\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t// return yScale(barheight)\n\t\t\t\t\t\t\t\t\t\t\treturn yScale(0) ;\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.attr(\"y\", function(d){\n\t\t\t\t\t\t\t\t\t\treturn xScale(d[xVar]);\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.attr(\"height\", xScale.bandwidth())\n\t\t\t\t\t\t\t\t\t.attr(\"width\", function(d) {\n\t\t\t\t\t\t\t\t\t\tconsole.log(d[yGroups[i]])\n\t\t\t\t\t\t\t\t\t\treturn  yScale(d[yGroups[i]]) ;\n\t\t\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t\t\tsvg.append(\"text\")\n\t\t\t\t\t\t\t\t\t.data(data)\n\t\t\t\t\t\t\t\t\t.style(\"fill\", \"#e0ecf4\")\n\t\t\t\t\t\t\t\t\t.style(\"font-size\", \"1.5rem\")\n\t\t\t\t\t\t\t\t\t.style(\"font-weight\", \"700\")\n\t\t\t\t\t\t\t\t\t.attr(\"text-anchor\", \"middle\")\n\t\t\t\t\t\t\t\t\t.text(function(d){\n\t\t\t\t\t\t\t\t\t\tconsole.log(d)\n\t\t\t\t\t\t\t\t\t\treturn d[yGroups[i]]+ \" %\"\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.attr(\"transform\",\n\t\t\t\t\t\t\t\t\t\t  \"translate(\" + padding.left + \",\" + (height/2 - 15) + \")\");\n\n\t\t\t\t\t\t\t\t\t// .attr(\"x\", function (d) { return xScale(d[xVar]); })\n\t\t\t\t\t\t\t\t\t// .attr(\"y\", function (d) {\n\t\t\t\t\t\t\t\t\t// \tlet barheight = 0;\n\t\t\t\t\t\t\t\t\t// \tfor (let j=i; j>-1; j = j-1) {\n\t\t\t\t\t\t\t\t\t// \t\tbarheight += d[yGroups[j]]\n\t\t\t\t\t\t\t\t\t// \t}\n\t\t\t\t\t\t\t\t\t// \treturn yScale(barheight)\n\t\t\t\t\t\t\t\t\t// })\n\t\t\t\t\t\t\t\t\t// .attr(\"width\", xScale.bandwidth())\n\t\t\t\t\t\t\t\t\t// .attr(\"height\", function(d) {\n\t\t\t\t\t\t\t\t\t// \treturn height - padding.bottom - yScale(d[yGroups[i]]);\n\t\t\t\t\t\t\t\t\t// })\n\t\t\t\t\t\t\t\t// \t.on(\"mouseover mousemove\", function(event, d) {\n\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t// \t\td3.select(this)\n\t\t\t\t\t\t\t\t// \t\t\t.style(\"opacity\", 0.8);\n\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t// \t\t// console.log(yGroups[i])\n\t\t\t\t\t\t\t\t// \t\ttooltip.select(\".part1\").html(d.time + \"<br>\" + yGroups[i] + \":\"+ d[yGroups[i]] + \"%\")\n\t\t\t\t\t\t\t\t// \t\t//\n\t\t\t\t\t\t\t\t// \t\ttooltip\n\t\t\t\t\t\t\t\t// \t\t   .style(\"visibility\", \"unset\")\n\t\t\t\t\t\t\t\t// \t\t   .style(\"left\", xScale(d[xVar]) + \"px\")\n\t\t\t\t\t\t\t\t// \t\t   .style(\"top\", height - yScale(d[yGroups[i]]) + \"px\")\n\t\t\t\t\t\t\t\t// }).on(\"mouseleave\", function(d) {\n\t\t\t\t\t\t\t\t// \ttooltip\n\t\t\t\t\t\t\t\t//    .style(\"visibility\", \"hidden\")\n\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t//    d3.select(this)\n\t\t\t\t\t\t\t\t// \t   .style(\"opacity\", 1.0);\n\t\t\t\t\t\t\t\t// })\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t  }\n\t\t\t\t  else{\n\n\t\tlet axisBottom = svg.append(\"g\")\n\t\t\t\t\t\t\t.attr(\"transform\", \"translate(0,\" + (height-padding.bottom) + \")\")\n\t\t\t\t\t\t\t.call(d3.axisBottom(xScale)\n\t\t\t\t\t\t\t.tickSize(0)\n\t\t\t\t\t\t\t\t// .ticks(5)\n\t\t\t\t\t\t\t\t// .tickSizeInner(-width)\n\t\t\t\t\t\t\t\t// .tickSizeOuter(0)\n\t\t\t\t\t\t\t\t// .tickPadding(3)\n\n\t\t\t\t\t\t\t);\n\n\t// axisBottom.selectAll(\".tick text\")\n\t// \t.call(wrapLabel, width/xScale.domain().length - 30)\n\n\n\n\t// axisBottom.selectAll(\".tick text\")\n\t// \t.call(wrapLabel, width/xScale.domain().length - 30)\n\n\tsvg.append(\"g\")\n\t\t.call(d3.axisLeft(yScale)\n\t\t\t// .ticks()\n\t\t\t.tickSizeInner(-width)\n\t\t\t.tickSizeOuter(0)\n\t\t\t.tickPadding(3)\n\n\t\t)\n\t\t.call(g => g.select(\".domain\").remove());\n\n\t\t\t// add data columns\n\t\t\tfor (let i=0; i<yGroups.length; i++) {\n\n\t\t\t\t\tsvg.append('g')\n\t\t\t\t\t\t.selectAll(\"rect\")\n\t\t\t\t\t\t.data(data)\n\t\t\t\t\t\t.enter()\n\t\t\t\t\t.append(\"rect\")\n\t\t\t\t\t.attr(\"fill\", colorScale(yGroups[i]))\n\t\t\t\t\t.attr(\"x\", function (d) { return xScale(d[xVar]); })\n\t\t\t\t\t.attr(\"y\", function (d) {\n\t\t\t\t\t\tlet barheight = 0;\n\t\t\t\t\t\tfor (let j=i; j>-1; j = j-1) {\n\t\t\t\t\t\t\tbarheight += d[yGroups[j]]\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn yScale(barheight)\n\t\t\t\t\t})\n\t\t\t\t\t.attr(\"width\", xScale.bandwidth())\n\t\t\t\t\t.attr(\"height\", function(d) {\n\t\t\t\t\t\treturn height - padding.bottom - yScale(d[yGroups[i]]);\n\t\t\t\t\t})\n\t\t\t\t\t.on(\"mouseover mousemove\", function(event, d) {\n\n\t\t\t\t\t\td3.select(this)\n\t\t\t\t\t\t\t.style(\"opacity\", 0.8);\n\n\t\t\t\t\t\t// console.log(yGroups[i])\n\t\t\t\t\t\ttooltip.select(\".part1\").html(d.time + \"<br>\" + yGroups[i] + \":\"+ d[yGroups[i]] + \"%\")\n\t\t\t\t\t\t//\n\t\t\t\t\t\ttooltip\n\t\t\t\t\t\t   .style(\"visibility\", \"unset\")\n\t\t\t\t\t\t   .style(\"left\", xScale(d[xVar]) + \"px\")\n\t\t\t\t\t\t   .style(\"top\", height - yScale(d[yGroups[i]]) + \"px\")\n\t\t\t\t}).on(\"mouseleave\", function(d) {\n\t                tooltip\n\t               .style(\"visibility\", \"hidden\")\n\n\t               d3.select(this)\n\t                   .style(\"opacity\", 1.0);\n\t            })\n\n\n\t\t\t\t// stackedColumn.append(\"text\")\n\t\t\t\t// .text(function(d) {\n\t\t\t\t// \t// console.log(d[yGroups[i]]);\n\t\t\t\t// \t// return d[yGroups[i]];\n\t\t\t\t// \treturn \"hello\";\n\t\t\t\t// })\n\t\t\t\t// .attr(\"fill\", \"black\")\n\t\t\t\t// .style(\"text-anchor\", \"middle\")\n\t\t\t\t// .attr(\"x\", function (d) {\n\t\t\t\t// \treturn (xScale.bandwidth() / 2);\n\t\t\t\t//\n\t\t\t\t// })\n\t\t\t\t// .attr(\"y\", function (d) {\n\t\t\t\t// \treturn yScale(d[yGroups[i]]);\n\t\t\t\t//\n\t\t\t\t// })\n\t\t\t\t// .attr(\"class\", \"datalabel2\")\n\n\n\t\t\t\t\t// .on(\"mousemove\", function(d){\n\t\t\t\t\t// \tif (window.innerWidth > 600) {\n\t\t\t\t\t// \t\tshowTip(d, tooltip, d3.mouse(this))\n\t\t\t\t\t// \t}\n\t\t\t\t\t// })\n\t\t\t\t\t// .on(\"mouseout\", function(d){\n\t\t\t\t\t// \ttooltip.style(\"display\", \"none\")\n\t\t\t\t\t// });\n\t\t\t}\n\n\t\t\t}\n// \t\t\tconst legend = d3.legendColor()\n// \t\t\t.scale(colorScale)\n// \t\t\t.labels(function(d,i){\n// // \t\t\t\tfor (let j=0; j<yGroups.length; j++) {\n// // \t\t\t\t\tconsole.log(yGroups[j]);\n// // \t\t\t\tconsole.log(d[yGroups[d.i]]);\n// // \t\t\t\tconsole.log(yGroups);\n// // // \t\t\t\t\tfor (let j=0; j<d.generatedLabels.length; j++) {\n// // \t\t\t\t\tconsole.log(data[yGroups[j]])\n// //\n// // \t\t\t}\n// \t\t\t// console.log(yGroups)\n// \t\t\t// console.log(d.i)\n// \t\t\t// console.log(d)\n// \t\t\treturn d.generatedLabels[d.i];\n//\n//\n// \t\t\t})\n// \t\t\t// .labels(function(d,i){\n// \t\t\t// \tfor (let j=0; j<d.generatedLabels.length; j++) {\n// \t\t\t// \t\td.generatedLabels[j] = (parseFloat(d.generatedLabels[j]) + \"%\")\n// \t\t\t// \t}\n// \t\t\t// \treturn d.generatedLabels[d.i]\n// \t\t\t// })\n// \t\t\t.orient(\"vertical\")\n// \t\t\t.shapeWidth((width-25)/colorScale.domain().length)\n// \t\t\t.shapePadding(0)\n// \t\t\t.labelWrap(250)\n// \t\tconst legendContainer = d3.select(el).append(\"svg\")\n// \t\t\t.attr(\"width\", width-25)\n// \t\t\t.attr(\"class\",\"legendContainer\")\n// \t\t\t.attr(\"height\", 100)\n// \t\t\t.append(\"g\")\n// \t\t\t.attr(\"transform\", \"translate(10,0)\")\n// \t\t\t.call(legend)\n\n\n// if-else on vertical/horizontal\n\n\t} // generateBarChart\n</script>\n\n<style>\n\t.chart :global(g.tick line) {\n\t\tstroke: #ccc;\n\t\topacity: 0.5;\n\t}\n\t.chart :global(text.datalabel) {\n\t\tfill: #000;\n\t\tfont-family:\"akkurat\",Arial,sans-serif;\n\t\tletter-spacing:-0.05rem;\n\t}\n</style>\n\n<div bind:this={el} class=\"chart\"></div>\n",
    "<script>\n\timport { onMount } from 'svelte';\n\timport { scaleLinear, scaleBand, scaleOrdinal, scaleQuantize, scaleThreshold, scaleQuantile } from 'd3-scale';\n\timport { axisLeft, axisRight, axisTop, axisBottom } from 'd3-axis';\n\timport { select } from 'd3-selection';\n\timport { transition } from 'd3-transition'\n\timport { legendColor, legendSize } from 'd3-svg-legend';\n\timport { vibrant } from '../helpers/colors.js'\n\n\tlet d3 = {\n\t\tscaleLinear: scaleLinear,\n\t\tscaleBand: scaleBand,\n\t\tscaleOrdinal: scaleOrdinal,\n\t\tscaleQuantize: scaleQuantize,\n\t\tscaleQuantile: scaleQuantile,\n\t\tscaleThreshold: scaleThreshold,\n\t\tselect: select,\n\t\taxisLeft: axisLeft,\n\t\taxisRight: axisRight,\n\t\taxisBottom: axisBottom,\n\t\taxisTop: axisTop,\n\t\tlegendColor: legendColor,\n\t\tlegendSize:legendSize\n\t}\n\n\tlet el;\n\n\tconst padding = { top: 20, right: 0, bottom: 0, left: 20 };\n\n\n\n\texport let data = [];\n\texport let width = {width};\n\texport let groups = {groups};\n\texport let columns = {columns};\n\texport let colorscheme = vibrant;\n\texport let orientation = \"horizontal\";\n\n\texport let thresholds = [0]\n\texport let total;\n\n\tfor (let g in groups) {\n\t\ttotal = data[groups[g]] + thresholds[thresholds.length-1];\n\t\tthresholds.push(total)\n\t}\n\n\n\texport let squaresize = Math.floor(width / columns) - 1;\n\t// export let squaresize = 30\n\t$: rows = Math.ceil(total/columns)\n\t// $: rows = Math.ceil(columns);\n\t$: height = (rows * (squaresize+1)) * 1.25\n\t// $: height = rows/1.5  * (squaresize+1)\n\n\t$: xScale = d3.scaleLinear()\n\t\t.domain([0, total])\n\t\t.range([0, columns * squaresize]);\n\n\t$: colorScale = d3.scaleQuantile()\n\t\t.domain(thresholds)\n\t\t.range(colorscheme.splice(0, thresholds.length-1));\n\n\tonMount(generateWaffleChart);\n\n\tfunction generateWaffleChart() {\n\t\tlet svg = d3.select(el)\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"height\", height + padding.top);\n\n\t\tlet gviz = svg.append(\"g\")\n\t\t\t.attr(\"transform\",\n\t\t\t  \"translate(\" + padding.left + \",\" + padding.top + \")\")\n\n\t\tgviz.append(\"text\")\n\t\t.style(\"fill\", \"#6e016b\")\n\t\t.style(\"font-size\", \"1.5rem\")\n\t\t.style(\"font-weight\", \"700\")\n\t\t// .attr(\"text-anchor\", \"middle\")\n\t\t.text(total + \" cases\")\n\n\n\t\t\tfor (let i=0; i < total; i++) {\n\n\t\t\t\tconsole.log(total)\n\n\n\n\t\t\t\tgviz.append(\"circle\")\n\t\t\t\t\t.attr(\"class\", \"rect\" + i)\n\t\t\t\t\t.attr(\"cx\", Math.floor(i / rows) * (squaresize+1))\n\t\t\t\t\t.attr(\"cy\", ((i % rows) * (squaresize+1))+40 )\n\t\t\t\t\t.attr(\"r\", squaresize/2)\n\n\t\t\t\t\t.attr(\"fill\", \t colorScale(i))\n\t\t\t}\n\n\n\t} // generateBarChart\n</script>\n\n<style>\n\t.chart :global(text){\n\t\tfont-family:'akkurat',sans-serif;\n\t\tfont-size:12px;\n\t\ttext-transform: uppercase;\n\t}\n\n\t.chart :global(g.tick line) {\n\t\tstroke: #ccc;\n\t}\n\n\t.chart :global(.legendContainer) {\n\t\tdisplay:block;\n\t\tmargin:0 auto;\n\t\tpadding:10px 0;\n\t\tborder:1px solid #ccc;\n\t\tborder-radius:3px;\n\t}\n\n\t.chart :global(.legendContainer text) {\n\t\tfont-family:'akkurat',sans-serif;\n\t\ttext-transform: uppercase;\n\t\tfill: #666;\n\t\tfont-size: 11px;\n\t}\n\n\t.stats {\n\t\tdisplay:grid;\n\t\tgrid-template-columns: var(--proportions);\n\t\tmargin:0\n\t}\n\n\t.stats div {\n\t\tfont-family:'akkurat',sans-serif;\n\t\tfont-size:11px;\n\t\ttext-transform: uppercase;\n\t}\n\n\th3 {\n\t\tfont-family:'akkurat',sans-serif;\n\t\tfont-size:1.5rem;\n\t\ttext-transform: unset;\n\t\tmargin: 0 auto 1rem;\n\t}\n</style>\n\n<div bind:this={el} class=\"chart\"></div>\n",
    "<script>\n\timport { onMount } from 'svelte';\n\timport { digitFormat } from '../helpers/digitFormat.js'\n\n\tlet el;\n\n\texport let data = {data};\n\tdata = data[data.length-1]; // only get the latest day's info\n</script>\n\n<style>\n\t#wellness-summary {\n\t\tdisplay: grid;\n \t   grid-template-columns: repeat(3, 1fr);\n\t\tgrid-template-rows: auto;\n\t\tgap: 20px 20px;\n\t\tgrid-template-areas: \". . .\" \"update-line update-line update-line\"\n\t}\n\n\t.update-line { grid-area: update-line; }\n\n\t.summary-item {\n\t  display: grid;\n\t  grid-template-columns: repeat(2, 1fr);\n\t  grid-template-rows: 0.33fr 1fr;\n\t  gap: 0.5rem 10px;\n\t  background-color: #e0ecf4;\n     padding: 10px;\n\t  border-radius:3px;\n\t}\n\n\t.summary-item h3 { grid-area: 1 / 1 / 2 / 4; }\n\t.datapt:nth-child(2) { grid-area: 2 / 1 / 3 / 2; }\n\t.datapt:nth-child(3)  { grid-area: 2 / 2 / 3 / 3; }\n\n\n\t#wellness-summary h3 {\n\t\tfont-size:0.95rem;\n\t\tcolor: #6e016b;\n\t\tfont-weight: 700;\n\t\tmargin:0;\n\t\ttext-align:left;\n\t}\n\n\t.datapt h4 {\n\t\ttext-transform:uppercase;\n\t\tfont-size:0.6rem;\n\t\tcolor: #555;\n\t    display: block;\n\t    height: 1rem;\n\t\t margin:0.5rem 0 0.2rem 0;\n\t\t position:relative;\n\t\t border:unset;\n\t\t letter-spacing:unset;\n\t}\n\n\t.datapt h4 > span {\n\t\tposition:absolute;\n\t\tbottom:0;\n\t\tleft:0;\n\t}\n\n\t.datapt > div {\n\t\tfont-weight:700;\n\t}\n\n\t@media screen and (max-width:600px) {\n\t\t#wellness-summary {\n\t \t   display:block;\n\t\t}\n\n\t\t.summary-item {\n\t\t\tmargin-bottom:0.5rem\n\t\t}\n\n\t\t.summary-item:nth-child(1) { grid-area: unset; }\n\t\t.summary-item:nth-child(2) { grid-area: unset; }\n\t\t.summary-item:nth-child(3) { grid-area: unset; }\n\t\t.summary-item:nth-child(4) { grid-area: unset; }\n\t\t.summary-item:nth-child(5) { grid-area: unset; }\n\n\n\t}\n</style>\n\n<div bind:this={el} class=\"wellness-summary\" id=\"wellness-summary\">\n<div class=\"summary-item\">\n\t<h3>Students Recovered</h3>\n\t<div class=\"datapt\">\n\t\t<h4><span>On Campus</span></h4>\n\t\t<div>{digitFormat(data[\"Students Recovered On Campus\"])}</div>\n\t</div>\n\t<div class=\"datapt\">\n\t\t<h4><span>Off Campus</span></h4>\n\t\t<div>{digitFormat(data[\"Students Recovered Off Campus\"])}</div>\n\t</div>\n</div>\n\t<div class=\"summary-item\">\n\t\t<h3>Students in Quarantine</h3>\n\t\t<div class=\"datapt\">\n\t\t\t<h4><span>On Campus</span></h4>\n\t\t\t<div>{digitFormat(data[\"Students in Quarantine On Campus\"])}</div>\n\t\t</div>\n\t\t<div class=\"datapt\">\n\t\t\t<h4><span>Off Campus</span></h4>\n\t\t\t<div>{digitFormat(data[\"Students in Quarantine Off Campus\"])}</div>\n\t\t</div>\n\t</div>\n\t<div class=\"summary-item\">\n\t\t<h3>Students in Isolation</h3>\n\t\t<div class=\"datapt\">\n\t\t\t<h4><span>On Campus</span></h4>\n\t\t\t<div>{digitFormat(data[\"Students in Isolation On Campus\"])}</div>\n\t\t</div>\n\t\t<div class=\"datapt\">\n\t\t\t<h4><span>Off Campus</span></h4>\n\t\t\t<div>{digitFormat(data[\"Students in Isolation Off Campus\"])}</div>\n\t\t</div>\n\t</div>\n\n</div>\n<!-- <p class=\"update-line\"><i>Beginning on September 25th, off-campus students are encouraged to isolate and quarantine in on-campus wellness housing.</i></p> -->\n",
    "<script>\n\n   export let source;\n   export let note;\n\n</script>\n\n<style>\n   #graphic-footer {\n      display: block;\n      width:100%;\n   }\n\n   #footer-meta span {\n      display:block;\n      color: #666;\n      font-size:0.75rem;\n   }\n\n   #footer-meta .nav__logo-mod .logo__news {\n      fill: #000;\n   }\n\n\n</style>\n\n<div id=\"graphic-footer\">\n   <div id=\"footer-meta\">\n      <span class=\"graphic-footer-text\">SOURCE: {source}</span>\n      <!-- <span class=\"graphic-footer-text\">NOTE: {note}</span> -->\n   </div>\n</div>\n",
    "<script>\n\n   export let title;\n   export let subhed;\n\n</script>\n\n<style>\n   h2.graphictitle {\n      margin:0 0 2rem 0;\n      display: block;\n      font-size:1.5em;\n      font-weight:700;\n      font-family: \"akkurat\",sans-serif\n   }\n</style>\n\n<h2 class=\"graphictitle\">{title}</h2>\n<!-- <span class=\"graphicsubhed\">{subhed}</span> -->\n"
  ],
  "names": [],
  "mappings": "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"
}